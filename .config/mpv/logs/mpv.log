[   0.000][v][cplayer] Command line options: '/mnt/mrlectus/TUT/Javascript/socks/2. WebSocket Tutorial： Ajax vs Websocket.webm'
[   0.000][v][cplayer] mpv v0.38.0-dirty Copyright © 2000-2024 mpv/MPlayer/mplayer2 projects
[   0.000][v][cplayer]  built on Jul  3 2024 05:59:22
[   0.000][v][cplayer] libplacebo version: v7.349.0
[   0.000][v][cplayer] FFmpeg version: n7.0.1
[   0.000][v][cplayer] FFmpeg library versions:
[   0.000][v][cplayer]    libavutil       59.8.100
[   0.000][v][cplayer]    libavcodec      61.3.100
[   0.000][v][cplayer]    libavformat     61.1.100
[   0.000][v][cplayer]    libswscale      8.1.100
[   0.000][v][cplayer]    libavfilter     10.1.100
[   0.000][v][cplayer]    libswresample   5.1.100
[   0.000][v][cplayer] 
[   0.000][v][cplayer] Configuration: -Db_pie=true -Dpython.bytecompile=1 -Dlibmpv=true -Dgl-x11=enabled -Dcaca=disabled -Dcdda=enabled -Ddvbin=enabled -Ddvdnav=enabled -Dlibarchive=enabled -Dopenal=enabled -Dprefix=/usr -Dlibexecdir=lib -Dsbindir=bin -Dauto_features=auto -Dbuildtype=plain -Dwrap_mode=nodownload
[   0.000][v][cplayer] List of enabled features: alsa av-channel-layout avif-muxer build-date cdda cplugins cuda-hwaccel cuda-interop dmabuf-interop-gl dmabuf-wayland drm dvbin dvdnav egl egl-drm egl-wayland egl-x11 ffmpeg ffnvcodec gbm gl gl-x11 glibc-thread-name glob glob-posix gpl iconv jack javascript jpeg jpegxl lavu-uuid lcms2 libarchive libass libavdevice libbluray libdl libplacebo linux-fstatfs luajit memfd-create openal pipewire posix posix-shm ppoll pthread-condattr-setclock pulse rubberband rubberband-3 sixel uchardet vaapi vaapi-drm vaapi-wayland vaapi-x11 vapoursynth vdpau vdpau-gl-x11 vector vk-khr-display vt.h vulkan vulkan-interop wayland wayland-protocols-1-27 wayland-protocols-1-31 wayland-protocols-1-32 x11 xv zimg zimg-st428 zlib
[   0.000][d][global] home path: '' -> '/home/brown/.config/mpv'
[   0.000][d][global] user path: '~~home/' -> '/home/brown/.config/mpv'
[   0.000][d][global] user path: '~~old_home/' -> '/home/brown/.mpv'
[   0.000][d][global] config path: 'encoding-profiles.conf' -/-> '/home/brown/.config/mpv/encoding-profiles.conf'
[   0.000][d][global] config path: 'encoding-profiles.conf' -/-> '/home/brown/.mpv/encoding-profiles.conf'
[   0.000][d][global] config path: 'encoding-profiles.conf' -> '/etc/mpv/encoding-profiles.conf'
[   0.000][v][cplayer] Reading config file /etc/mpv/encoding-profiles.conf
[   0.000][v][ifo_dvdnav] Opening /etc/mpv/encoding-profiles.conf
[   0.000][v][bdmv/bluray] Opening /etc/mpv/encoding-profiles.conf
[   0.000][v][file] Opening /etc/mpv/encoding-profiles.conf
[   0.000][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.000][d][file] Stream opened successfully.
[   0.000][v][cplayer] Applying profile 'default'...
[   0.000][d][global] config path: 'mpv.conf' -> '/home/brown/.config/mpv/mpv.conf'
[   0.000][d][global] config path: 'config' -/-> '/home/brown/.config/mpv/config'
[   0.000][d][global] config path: 'mpv.conf' -/-> '/home/brown/.mpv/mpv.conf'
[   0.000][d][global] config path: 'config' -/-> '/home/brown/.mpv/config'
[   0.000][d][global] config path: 'mpv.conf' -/-> '/etc/mpv/mpv.conf'
[   0.000][d][global] config path: 'config' -/-> '/etc/mpv/config'
[   0.000][v][cplayer] Reading config file /home/brown/.config/mpv/mpv.conf
[   0.000][v][ifo_dvdnav] Opening /home/brown/.config/mpv/mpv.conf
[   0.000][v][bdmv/bluray] Opening /home/brown/.config/mpv/mpv.conf
[   0.000][v][file] Opening /home/brown/.config/mpv/mpv.conf
[   0.000][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.000][d][file] Stream opened successfully.
[   0.000][v][cplayer] Applying profile 'default'...
[   0.000][v][cplayer] Setting option 'save-position-on-quit' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'term-osd-bar' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'hr-seek-framedrop' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'hwdec' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'video-sync' = 'display-resample-vdrop' (flags = 4)
[   0.000][v][cplayer] Setting option 'log-file' = '/home/brown/.config/mpv/logs/mpv.log' (flags = 4)
[   0.000][v][cplayer] Setting option 'keep-open-pause' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-border-size' = '1' (flags = 4)
[   0.000][v][cplayer] Setting option 'tone-mapping-max-boost' = '1' (flags = 4)
[   0.000][v][cplayer] Setting option 'tone-mapping-param' = '0.3' (flags = 4)
[   0.000][v][cplayer] Setting option 'tone-mapping' = 'mobius' (flags = 4)
[   0.000][v][cplayer] Setting option 'brightness' = '0' (flags = 4)
[   0.000][v][cplayer] Setting option 'saturation' = '0' (flags = 4)
[   0.000][v][cplayer] Setting option 'border' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'pause' = '' (flags = 4)
[   0.000][v][cplayer] Setting option 'volume-max' = '400' (flags = 4)
[   0.000][v][cplayer] Setting option 'volume' = '130' (flags = 4)
[   0.000][v][cplayer] Setting option 'audio-pitch-correction' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'term-osd-bar' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'alang' = 'en,eng,jp,jpn' (flags = 4)
[   0.000][v][cplayer] Setting option 'slang' = 'en,eng,jp,jpn' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-template' = '~~\SPOILER_%F-T%wH.%wM.%wS.%wT-F%{estimated-frame-number}' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-format' = 'png' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-png-compression' = '0' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-tag-colorspace' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-high-bit-depth' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-webp-lossless' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-webp-quality' = '100' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-webp-compression' = '6' (flags = 4)
[   0.000][v][cplayer] Setting option 'cursor-autohide' = '1000' (flags = 4)
[   0.000][v][cplayer] Setting option 'cache' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'blend-subtitles' = 'yes' (flags = 4)
[   0.000][d][global] config path: 'input.conf' -> '/home/brown/.config/mpv/input.conf'
[   0.000][d][global] config path: 'input.conf' -/-> '/home/brown/.mpv/input.conf'
[   0.000][d][global] config path: 'input.conf' -/-> '/etc/mpv/input.conf'
[   0.000][d][global] user path: '/home/brown/.config/mpv/input.conf' -> '/home/brown/.config/mpv/input.conf'
[   0.000][v][ifo_dvdnav] Opening /home/brown/.config/mpv/input.conf
[   0.000][v][bdmv/bluray] Opening /home/brown/.config/mpv/input.conf
[   0.000][v][file] Opening /home/brown/.config/mpv/input.conf
[   0.000][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.000][d][file] Stream opened successfully.
[   0.000][v][input] Parsing input config file /home/brown/.config/mpv/input.conf
[   0.000][v][input] Input config file /home/brown/.config/mpv/input.conf parsed: 25 binds
[   0.000][d][global] user path: '/home/brown/.config/mpv/logs/mpv.log' -> '/home/brown/.config/mpv/logs/mpv.log'
[   0.008][v][cplayer] mpv v0.38.0-dirty Copyright © 2000-2024 mpv/MPlayer/mplayer2 projects
[   0.008][v][cplayer]  built on Jul  3 2024 05:59:22
[   0.008][v][cplayer] libplacebo version: v7.349.0
[   0.008][v][cplayer] FFmpeg version: n7.0.1
[   0.008][v][cplayer] FFmpeg library versions:
[   0.008][v][cplayer]    libavutil       59.8.100
[   0.008][v][cplayer]    libavcodec      61.3.100
[   0.008][v][cplayer]    libavformat     61.1.100
[   0.008][v][cplayer]    libswscale      8.1.100
[   0.008][v][cplayer]    libavfilter     10.1.100
[   0.008][v][cplayer]    libswresample   5.1.100
[   0.008][v][cplayer] 
[   0.008][v][cplayer] Configuration: -Db_pie=true -Dpython.bytecompile=1 -Dlibmpv=true -Dgl-x11=enabled -Dcaca=disabled -Dcdda=enabled -Ddvbin=enabled -Ddvdnav=enabled -Dlibarchive=enabled -Dopenal=enabled -Dprefix=/usr -Dlibexecdir=lib -Dsbindir=bin -Dauto_features=auto -Dbuildtype=plain -Dwrap_mode=nodownload
[   0.008][v][cplayer] List of enabled features: alsa av-channel-layout avif-muxer build-date cdda cplugins cuda-hwaccel cuda-interop dmabuf-interop-gl dmabuf-wayland drm dvbin dvdnav egl egl-drm egl-wayland egl-x11 ffmpeg ffnvcodec gbm gl gl-x11 glibc-thread-name glob glob-posix gpl iconv jack javascript jpeg jpegxl lavu-uuid lcms2 libarchive libass libavdevice libbluray libdl libplacebo linux-fstatfs luajit memfd-create openal pipewire posix posix-shm ppoll pthread-condattr-setclock pulse rubberband rubberband-3 sixel uchardet vaapi vaapi-drm vaapi-wayland vaapi-x11 vapoursynth vdpau vdpau-gl-x11 vector vk-khr-display vt.h vulkan vulkan-interop wayland wayland-protocols-1-27 wayland-protocols-1-31 wayland-protocols-1-32 x11 xv zimg zimg-st428 zlib
[   0.008][d][osc] Loading lua script @osc.lua...
[   0.008][d][ytdl_hook] Loading lua script @ytdl_hook.lua...
[   0.008][d][stats] Loading lua script @stats.lua...
[   0.008][d][osc] loading mp.defaults
[   0.009][d][ytdl_hook] loading mp.defaults
[   0.009][d][stats] loading mp.defaults
[   0.009][d][console] Loading lua script @console.lua...
[   0.009][d][osc] loading @osc.lua
[   0.009][d][auto_profiles] Loading lua script @auto_profiles.lua...
[   0.009][d][stats] loading @stats.lua
[   0.009][d][global] config path: 'scripts' -> '/home/brown/.config/mpv/scripts'
[   0.009][d][global] config path: 'scripts' -/-> '/home/brown/.mpv/scripts'
[   0.010][d][console] loading mp.defaults
[   0.010][d][ytdl_hook] loading @ytdl_hook.lua
[   0.011][d][auto_profiles] loading mp.defaults
[   0.011][d][global] config path: 'scripts' -> '/etc/mpv/scripts'
[   0.011][d][ytdl_hook] reading options for ytdl_hook
[   0.011][d][global] config path: 'script-opts/ytdl_hook.conf' -/-> '/home/brown/.config/mpv/script-opts/ytdl_hook.conf'
[   0.011][d][global] config path: 'script-opts/ytdl_hook.conf' -/-> '/home/brown/.mpv/script-opts/ytdl_hook.conf'
[   0.011][d][global] config path: 'script-opts/ytdl_hook.conf' -/-> '/etc/mpv/script-opts/ytdl_hook.conf'
[   0.011][d][ytdl_hook] script-opts/ytdl_hook.conf not found.
[   0.011][d][global] config path: 'lua-settings/ytdl_hook.conf' -/-> '/home/brown/.config/mpv/lua-settings/ytdl_hook.conf'
[   0.011][d][global] config path: 'lua-settings/ytdl_hook.conf' -/-> '/home/brown/.mpv/lua-settings/ytdl_hook.conf'
[   0.011][d][global] config path: 'lua-settings/ytdl_hook.conf' -/-> '/etc/mpv/lua-settings/ytdl_hook.conf'
[   0.011][d][ytdl_hook] lua-settings/ytdl_hook.conf not found.
[   0.012][d][stats] reading options for stats
[   0.012][d][mpris] Loading cplugin script /etc/mpv/scripts/mpris.so...
[   0.012][d][global] config path: 'script-opts/stats.conf' -/-> '/home/brown/.config/mpv/script-opts/stats.conf'
[   0.012][d][global] config path: 'script-opts/stats.conf' -/-> '/home/brown/.mpv/script-opts/stats.conf'
[   0.012][d][global] config path: 'script-opts/stats.conf' -/-> '/etc/mpv/script-opts/stats.conf'
[   0.012][d][stats] script-opts/stats.conf not found.
[   0.012][d][global] config path: 'lua-settings/stats.conf' -/-> '/home/brown/.config/mpv/lua-settings/stats.conf'
[   0.012][d][global] config path: 'lua-settings/stats.conf' -/-> '/home/brown/.mpv/lua-settings/stats.conf'
[   0.012][d][global] config path: 'lua-settings/stats.conf' -/-> '/etc/mpv/lua-settings/stats.conf'
[   0.012][d][stats] lua-settings/stats.conf not found.
[   0.012][d][autosub] Loading lua script /home/brown/.config/mpv/scripts/autosub.lua...
[   0.012][v][cplayer] Waiting for scripts...
[   0.012][d][auto_profiles] loading @auto_profiles.lua
[   0.012][d][console] loading @console.lua
[   0.013][d][autosub] loading mp.defaults
[   0.013][d][cplayer] Run command: define-section, flags=64, args=[name="input_stats", contents="", flags="default"]
[   0.013][d][cplayer] Run command: enable-section, flags=64, args=[name="input_stats", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.013][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_stats", contents="", flags="force"]
[   0.013][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_stats", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.013][d][autosub] loading file /home/brown/.config/mpv/scripts/autosub.lua
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_autosub", contents="b script-binding autosub/auto_load_subs\n", flags="default"]
[   0.016][d][cplayer] Run command: enable-section, flags=64, args=[name="input_autosub", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.016][d][osc] reading options for osc
[   0.016][d][global] config path: 'script-opts/osc.conf' -/-> '/home/brown/.config/mpv/script-opts/osc.conf'
[   0.016][d][global] config path: 'script-opts/osc.conf' -/-> '/home/brown/.mpv/script-opts/osc.conf'
[   0.016][d][global] config path: 'script-opts/osc.conf' -/-> '/etc/mpv/script-opts/osc.conf'
[   0.016][d][osc] script-opts/osc.conf not found.
[   0.016][d][global] config path: 'lua-settings/osc.conf' -/-> '/home/brown/.config/mpv/lua-settings/osc.conf'
[   0.016][d][global] config path: 'lua-settings/osc.conf' -/-> '/home/brown/.mpv/lua-settings/osc.conf'
[   0.016][d][global] config path: 'lua-settings/osc.conf' -/-> '/etc/mpv/lua-settings/osc.conf'
[   0.016][d][osc] lua-settings/osc.conf not found.
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_autosub", contents="", flags="force"]
[   0.016][d][console] reading options for console
[   0.016][d][global] config path: 'script-opts/console.conf' -/-> '/home/brown/.config/mpv/script-opts/console.conf'
[   0.016][d][global] config path: 'script-opts/console.conf' -/-> '/home/brown/.mpv/script-opts/console.conf'
[   0.016][d][global] config path: 'script-opts/console.conf' -/-> '/etc/mpv/script-opts/console.conf'
[   0.016][d][console] script-opts/console.conf not found.
[   0.016][d][global] config path: 'lua-settings/console.conf' -/-> '/home/brown/.config/mpv/lua-settings/console.conf'
[   0.016][d][global] config path: 'lua-settings/console.conf' -/-> '/home/brown/.mpv/lua-settings/console.conf'
[   0.017][d][global] config path: 'lua-settings/console.conf' -/-> '/etc/mpv/lua-settings/console.conf'
[   0.017][d][console] lua-settings/console.conf not found.
[   0.017][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_autosub", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_console", contents="", flags="default"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="showhide", contents="mouse_move script-binding osc/__keybinding1\nmouse_leave script-binding osc/__keybinding2\n", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_console", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="showhide_wc", contents="mouse_move script-binding osc/__keybinding3\nmouse_leave script-binding osc/__keybinding4\n", flags="force"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_console", contents="", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="showhide", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_console", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="showhide_wc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input", contents="mbtn_left script-binding osc/__keybinding5\nshift+mbtn_left script-binding osc/__keybinding6\nmbtn_right script-binding osc/__keybinding7\nmbtn_mid script-binding osc/__keybinding8\nwheel_up script-binding osc/__keybinding9\nwheel_down script-binding osc/__keybinding10\nmbtn_left_dbl ignore\nshift+mbtn_left_dbl ignore\nmbtn_right_dbl ignore\n", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="window-controls", contents="mbtn_left script-binding osc/__keybinding11\n", flags="force"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   0.019][v][cplayer] Set property: user-data/osc/visibility="auto" -> 1
[   0.019][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[   0.019][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   0.019][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[   0.019][v][cplayer] Done loading scripts.
[   0.019][d][global] state path: 'watch_later' -> '/home/brown/.local/state/mpv/watch_later'
[   0.020][v][cplayer] Running hook: auto_profiles/on_before_start_file
[   0.020][d][global] state path: 'watch_later' -> '/home/brown/.local/state/mpv/watch_later'
[   0.020][v][cplayer] Running hook: ytdl_hook/on_load
[   0.021][v][ytdl_hook] ytdl:// hook
[   0.022][d][osc] osc_init
[   0.022][v][ytdl_hook] not a ytdl:// url
[   0.022][v][cplayer] Running hook: ytdl_hook/on_load
[   0.022][v][ytdl_hook] playlist hook
[   0.022][v][cplayer] Running hook: auto_profiles/on_load
[   0.023][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[   0.023][d][global] config path: 'fonts' -/-> '/home/brown/.config/mpv/fonts'
[   0.023][d][global] config path: 'fonts' -/-> '/home/brown/.mpv/fonts'
[   0.023][d][global] config path: 'fonts' -/-> '/etc/mpv/fonts'
[   0.023][d][osd/libass] ASS library version: 0x1702000 (runtime 0x1703000)
[   0.023][v][osd/libass] libass API version: 0x1703000
[   0.023][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5-dirty
[   0.023][v][ifo_dvdnav] Opening /mnt/mrlectus/TUT/Javascript/socks/2. WebSocket Tutorial： Ajax vs Websocket.webm
[   0.024][v][bdmv/bluray] Opening /mnt/mrlectus/TUT/Javascript/socks/2. WebSocket Tutorial： Ajax vs Websocket.webm
[   0.024][v][file] Opening /mnt/mrlectus/TUT/Javascript/socks/2. WebSocket Tutorial： Ajax vs Websocket.webm
[   0.024][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 9.0.0 (COMPLEX)
[   0.024][d][global] config path: 'subfont.ttf' -/-> '/home/brown/.config/mpv/subfont.ttf'
[   0.024][d][global] config path: 'subfont.ttf' -/-> '/home/brown/.mpv/subfont.ttf'
[   0.024][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.024][d][global] config path: 'fonts.conf' -/-> '/home/brown/.config/mpv/fonts.conf'
[   0.024][d][global] config path: 'fonts.conf' -/-> '/home/brown/.mpv/fonts.conf'
[   0.024][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.024][v][osd/libass] Setting up fonts...
[   0.024][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.024][d][file] Stream opened successfully.
[   0.024][v][demux] Trying demuxers for level=normal.
[   0.024][d][demux] Trying demuxer: disc (force-level: normal)
[   0.024][d][demux] Trying demuxer: edl (force-level: normal)
[   0.024][d][demux] Trying demuxer: cue (force-level: normal)
[   0.024][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   0.025][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   0.025][d][demux] Trying demuxer: mkv (force-level: normal)
[   0.025][d][mkv] Found the head...
[   0.025][d][mkv] + a segment...
[   0.025][d][mkv] Parsing seek head...
[   0.025][d][mkv] |+ segment information...
[   0.025][d][mkv] float 230628.000000
[   0.025][d][mkv] | + muxing app: Lavf60.16.100
[   0.025][d][mkv] | + writing app: Lavf60.16.100
[   0.025][d][mkv] | + timecode scale: 1000000
[   0.025][d][mkv] | + duration: 230.628s
[   0.025][d][mkv] |+ segment tracks...
[   0.025][d][mkv] float 48000.000000
[   0.025][d][mkv] | + a track...
[   0.025][d][mkv] |  + Track number: 1
[   0.025][d][mkv] |  + Track type: Video
[   0.025][d][mkv] |  + Video track
[   0.025][d][mkv] |   + Pixel width: 1280
[   0.025][d][mkv] |   + Pixel height: 720
[   0.025][d][mkv] |    + Matrix: bt.709
[   0.025][d][mkv] |    + Levels: limited
[   0.025][d][mkv] |  + Codec ID: V_VP9
[   0.025][d][mkv] |  + Language: eng
[   0.025][d][mkv] |  + Default duration: 40.000ms ( = 25.000 fps)
[   0.025][d][mkv] | + a track...
[   0.025][d][mkv] |  + Track number: 2
[   0.025][d][mkv] |  + Track type: Audio
[   0.025][d][mkv] |  + Audio track
[   0.025][d][mkv] |   + Sampling frequency: 48000.000000
[   0.025][d][mkv] |   + Bit depth: 32
[   0.025][d][mkv] |   + Channels: 2
[   0.025][d][mkv] |  + Codec ID: A_OPUS
[   0.025][d][mkv] |  + CodecPrivate, length 19
[   0.025][d][mkv] |  + Language: eng
[   0.025][d][mkv] |+ found cluster
[   0.027][v][mkv] Deferring reading cues.
[   0.027][v][mkv] All headers are parsed!
[   0.027][v][demux] Detected file format: Matroska
[   0.027][v][cplayer] Opening done: /mnt/mrlectus/TUT/Javascript/socks/2. WebSocket Tutorial： Ajax vs Websocket.webm
[   0.032][d][ffmpeg] AVIOContext: Statistics: 32768 bytes read, 0 seeks
[   0.046][v][osd/libass] Using font provider fontconfig
[   0.046][v][osd/libass] Done.
[   0.047][v][find_files] Loading external files in /mnt/mrlectus/TUT/Javascript/socks/
[   0.047][d][global] config path: 'sub' -/-> '/home/brown/.config/mpv/sub'
[   0.047][d][global] config path: 'sub' -/-> '/home/brown/.mpv/sub'
[   0.047][d][global] config path: 'sub' -/-> '/etc/mpv/sub'
[   0.047][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[   0.047][d][osc] osc_init
[   0.047][v][cplayer] Running hook: ytdl_hook/on_preloaded
[   0.047][v][cplayer] Running hook: auto_profiles/on_preloaded
[   0.048][v][mkv] select track 0
[   0.048][v][mkv] select track 1
[   0.048][i][cplayer]  (+) Video --vid=1 (*) (vp9 1280x720 25.000fps)
[   0.048][i][cplayer]  (+) Audio --aid=1 --alang=eng (*) (opus 2ch 48000Hz)
[   0.048][v][vo/gpu] Probing for best GPU context.
[   0.048][v][vo/gpu/opengl] Initializing GPU context 'wayland'
[   0.049][v][vo/gpu/wayland] Registered for protocol wl_shm
[   0.049][v][vo/gpu/wayland] Registered for protocol zwp_linux_dmabuf_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol wl_compositor
[   0.049][v][vo/gpu/wayland] Registered for protocol wl_subcompositor
[   0.049][v][vo/gpu/wayland] Registered for protocol wl_data_device_manager
[   0.049][v][vo/gpu/wayland] Registered for protocol zwp_idle_inhibit_manager_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol xdg_wm_base
[   0.049][v][vo/gpu/wayland] Registered for protocol zxdg_decoration_manager_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol wp_presentation
[   0.049][v][vo/gpu/wayland] Registered for protocol wp_viewporter
[   0.049][v][vo/gpu/wayland] Registered for protocol wp_single_pixel_buffer_manager_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol wp_content_type_manager_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol wp_fractional_scale_manager_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol wp_cursor_shape_manager_v1
[   0.049][v][vo/gpu/wayland] Registered for protocol wl_seat
[   0.049][v][vo/gpu/wayland] Registered for protocol wl_output
[   0.050][v][vo/gpu/wayland] Registered output Chimei Innolux Corporation 0x151B (0x30):
[   0.050][v][vo/gpu/wayland] 	x: 0px, y: 0px
[   0.050][v][vo/gpu/wayland] 	w: 1920px (340mm), h: 1080px (190mm)
[   0.050][v][vo/gpu/wayland] 	scale: 2
[   0.050][v][vo/gpu/wayland] 	Hz: 60.001000
[   0.050][d][vo/gpu/wayland] Requested client-side decorations but compositor responded with server-side. It is likely that compositor wants us to stay in a given mode.
[   0.050][v][vo/gpu/wayland] Enabling server decorations
[   0.214][v][vo/gpu/opengl] EGL_VERSION=1.5
[   0.214][v][vo/gpu/opengl] EGL_VENDOR=Mesa Project
[   0.214][v][vo/gpu/opengl] EGL_CLIENT_APIS=OpenGL OpenGL_ES 
[   0.214][v][vo/gpu/opengl] Trying to create Desktop OpenGL context.
[   0.214][d][vo/gpu/opengl] Chosen EGLConfig:
[   0.214][d][vo/gpu/opengl]   EGL_CONFIG_ID=0x11
[   0.214][d][vo/gpu/opengl]   EGL_RED_SIZE=0xa
[   0.214][d][vo/gpu/opengl]   EGL_GREEN_SIZE=0xa
[   0.214][d][vo/gpu/opengl]   EGL_BLUE_SIZE=0xa
[   0.214][d][vo/gpu/opengl]   EGL_ALPHA_SIZE=0x0
[   0.214][d][vo/gpu/opengl]   EGL_COLOR_BUFFER_TYPE=0x308e
[   0.214][d][vo/gpu/opengl]   EGL_CONFIG_CAVEAT=0x3038
[   0.214][d][vo/gpu/opengl]   EGL_CONFORMANT=0x4d
[   0.214][d][vo/gpu/opengl]   EGL_NATIVE_VISUAL_ID=0x0
[   0.216][v][vo/gpu/wayland] GL_VERSION='4.6 (Core Profile) Mesa 24.1.3-arch1.1'
[   0.216][v][vo/gpu/wayland] Detected desktop OpenGL 4.6.
[   0.216][v][vo/gpu/wayland] GL_VENDOR='AMD'
[   0.216][v][vo/gpu/wayland] GL_RENDERER='AMD Radeon Vega 3 Graphics (radeonsi, raven2, LLVM 18.1.8, DRM 3.57, 6.9.9-1-cachyos)'
[   0.216][v][vo/gpu/wayland] GL_SHADING_LANGUAGE_VERSION='4.60'
[   0.217][d][vo/gpu/wayland] Combined OpenGL extensions string:
[   0.217][d][vo/gpu/wayland] EGL_ANDROID_blob_cache EGL_ANDROID_native_fence_sync EGL_EXT_buffer_age EGL_EXT_config_select_group EGL_EXT_create_context_robustness EGL_EXT_image_dma_buf_import EGL_EXT_image_dma_buf_import_modifiers EGL_EXT_present_opaque EGL_EXT_protected_surface EGL_EXT_query_reset_notification_strategy EGL_EXT_swap_buffers_with_damage EGL_IMG_context_priority EGL_KHR_cl_event2 EGL_KHR_config_attribs EGL_KHR_context_flush_control EGL_KHR_create_context EGL_KHR_create_context_no_error EGL_KHR_fence_sync EGL_KHR_get_all_proc_addresses EGL_KHR_gl_colorspace EGL_KHR_gl_renderbuffer_image EGL_KHR_gl_texture_2D_image EGL_KHR_gl_texture_3D_image EGL_KHR_gl_texture_cubemap_image EGL_KHR_image_base EGL_KHR_no_config_context EGL_KHR_reusable_sync EGL_KHR_surfaceless_context EGL_KHR_swap_buffers_with_damage EGL_EXT_pixel_format_float EGL_KHR_wait_sync EGL_MESA_configless_context EGL_MESA_drm_image EGL_MESA_gl_interop EGL_MESA_image_dma_buf_export EGL_MESA_query_driver EGL_MESA_x11_native_visual_id EGL_WL_bind_wayland_display EGL_WL_create_wayland_buffer_from_image  GL_AMD_conservative_depth GL_AMD_depth_clamp_separate GL_AMD_draw_buffers_blend GL_AMD_framebuffer_multisample_advanced GL_AMD_gpu_shader_int64 GL_AMD_multi_draw_indirect GL_AMD_performance_monitor GL_AMD_pinned_memory GL_AMD_query_buffer_object GL_AMD_seamless_cubemap_per_texture GL_AMD_shader_stencil_export GL_AMD_shader_trinary_minmax GL_AMD_texture_texture4 GL_AMD_vertex_shader_layer GL_AMD_vertex_shader_viewport_index GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 GL_ARB_ES2_compatibility GL_ARB_ES3_1_compatibility GL_ARB_ES3_2_compatibility GL_ARB_ES3_compatibility GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_color_buffer_float GL_ARB_compressed_texture_pixel_storage GL_ARB_compute_shader GL_ARB_compute_variable_group_size GL_ARB_conditional_render_inverted GL_ARB_conservative_depth GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_elements_base_vertex GL_ARB_draw_indirect GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gl_spirv GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_gpu_shader_int64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_occlusion_query2 GL_ARB_parallel_shader_compile GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_sprite GL_ARB_polygon_offset_clamp GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_query_buffer_object GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counter_ops GL_ARB_shader_atomic_counters GL_ARB_shader_ballot GL_ARB_shader_bit_encoding GL_ARB_shader_clock GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_stencil_export GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shader_viewport_layer_array GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_sparse_buffer GL_ARB_sparse_texture GL_ARB_sparse_texture2 GL_ARB_sparse_texture_clamp GL_ARB_spirv_extensions GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map_array GL_ARB_texture_filter_anisotropic GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ATI_blend_equation_separate GL_ATI_meminfo GL_ATI_texture_float GL_ATI_texture_mirror_once GL_EXT_EGL_image_storage GL_EXT_EGL_sync GL_EXT_abgr GL_EXT_blend_equation_separate GL_EXT_debug_label GL_EXT_demote_to_helper_invocation GL_EXT_depth_bounds_test GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_memory_object GL_EXT_memory_object_fd GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_pixel_buffer_object GL_EXT_polygon_offset_clamp GL_EXT_provoking_vertex GL_EXT_semaphore GL_EXT_semaphore_fd GL_EXT_shader_image_load_formatted GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shader_samples_identical GL_EXT_texture_array GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_mirror_clamp GL_EXT_texture_sRGB GL_EXT_texture_sRGB_R8 GL_EXT_texture_sRGB_decode GL_EXT_texture_shadow_lod GL_EXT_texture_shared_exponent GL_EXT_texture_snorm GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_EXT_window_rectangles GL_IBM_multimode_draw_arrays GL_INTEL_blackhole_render GL_KHR_blend_equation_advanced GL_KHR_context_flush_control GL_KHR_debug GL_KHR_no_error GL_KHR_parallel_shader_compile GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_sliced_3d GL_MESA_framebuffer_flip_y GL_MESA_pack_invert GL_MESA_shader_integer_functions GL_MESA_texture_const_bandwidth GL_MESA_texture_signed_rgba GL_NVX_gpu_memory_info GL_NV_alpha_to_coverage_dither_control GL_NV_compute_shader_derivatives GL_NV_conditional_render GL_NV_copy_image GL_NV_depth_clamp GL_NV_packed_depth_stencil GL_NV_shader_atomic_int64 GL_NV_texture_barrier GL_NV_vdpau_interop GL_OES_EGL_image GL_S3_s3tc
[   0.217][v][vo/gpu/wayland] Loaded extension GL_NV_vdpau_interop.
[   0.217][v][vo/gpu/wayland] Loaded extension GL_KHR_debug.
[   0.235][d][vo/gpu/opengl] Texture formats:
[   0.235][d][vo/gpu/opengl]   NAME       COMP*TYPE SIZE           DEPTH PER COMP.
[   0.235][d][vo/gpu/opengl]   r8         1*unorm   1B    LF CR ST {8}
[   0.235][d][vo/gpu/opengl]   rg8        2*unorm   2B    LF CR ST {8 8}
[   0.235][d][vo/gpu/opengl]   rgb8       3*unorm   3B    LF CR ST {8 8 8}
[   0.235][d][vo/gpu/opengl]   rgba8      4*unorm   4B    LF CR ST {8 8 8 8}
[   0.235][d][vo/gpu/opengl]   r16        1*unorm   2B    LF CR ST {16}
[   0.235][d][vo/gpu/opengl]   rg16       2*unorm   4B    LF CR ST {16 16}
[   0.235][d][vo/gpu/opengl]   rgb16      3*unorm   6B    LF CR ST {16 16 16}
[   0.235][d][vo/gpu/opengl]   rgba16     4*unorm   8B    LF CR ST {16 16 16 16}
[   0.235][d][vo/gpu/opengl]   r8ui       1*uint    1B       CR ST {8}
[   0.235][d][vo/gpu/opengl]   rg8ui      2*uint    2B       CR ST {8 8}
[   0.235][d][vo/gpu/opengl]   rgb8ui     3*uint    3B          ST {8 8 8}
[   0.235][d][vo/gpu/opengl]   rgba8ui    4*uint    4B       CR ST {8 8 8 8}
[   0.235][d][vo/gpu/opengl]   r16ui      1*uint    2B       CR ST {16}
[   0.235][d][vo/gpu/opengl]   rg16ui     2*uint    4B       CR ST {16 16}
[   0.235][d][vo/gpu/opengl]   rgb16ui    3*uint    6B          ST {16 16 16}
[   0.235][d][vo/gpu/opengl]   rgba16ui   4*uint    8B       CR ST {16 16 16 16}
[   0.235][d][vo/gpu/opengl]   r16f       1*float   4B    LF CR ST {32/16}
[   0.235][d][vo/gpu/opengl]   rg16f      2*float   8B    LF CR ST {32/16 32/16}
[   0.235][d][vo/gpu/opengl]   rgb16f     3*float  12B    LF CR ST {32/16 32/16 32/16}
[   0.235][d][vo/gpu/opengl]   rgba16f    4*float  16B    LF CR ST {32/16 32/16 32/16 32/16}
[   0.235][d][vo/gpu/opengl]   r32f       1*float   4B    LF CR ST {32}
[   0.235][d][vo/gpu/opengl]   rg32f      2*float   8B    LF CR ST {32 32}
[   0.235][d][vo/gpu/opengl]   rgb32f     3*float  12B    LF CR ST {32 32 32}
[   0.235][d][vo/gpu/opengl]   rgba32f    4*float  16B    LF CR ST {32 32 32 32}
[   0.235][d][vo/gpu/opengl]   rgb10_a2   4*unorm   4B    LF CR ST {0/10 0/10 0/10 0/2}
[   0.235][d][vo/gpu/opengl]   rgba12     4*unorm   8B    LF CR ST {16 16 16 16}
[   0.235][d][vo/gpu/opengl]   rgb10      3*unorm   6B    LF CR ST {16/10 16/10 16/10}
[   0.235][d][vo/gpu/opengl]   rgb565     3*unorm   2B    LF    ST {0/8 0/8 0/8}
[   0.235][d][vo/gpu/opengl]  LA = LUMINANCE_ALPHA hack format
[   0.235][d][vo/gpu/opengl]  LF = linear filterable
[   0.235][d][vo/gpu/opengl]  CR = can be used for render targets
[   0.235][d][vo/gpu/opengl]  ST = can be used for storable images
[   0.235][d][vo/gpu/opengl] Image formats:
[   0.235][d][vo/gpu/opengl]   yuv444p => 3 planes 1x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuv420p => 3 planes 2x2 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   gray => 1 planes 1x1 8/0 [r8] (r) [unorm]
[   0.235][d][vo/gpu/opengl]   gray16 => 1 planes 1x1 16/0 [r16] (r) [unorm]
[   0.235][d][vo/gpu/opengl]   uyvy422
[   0.235][d][vo/gpu/opengl]   nv12 => 2 planes 2x2 8/0 [r8/rg8] (r/gb) [unorm]
[   0.235][d][vo/gpu/opengl]   p010 => 2 planes 2x2 16/6 [r16/rg16] (r/gb) [unorm]
[   0.235][d][vo/gpu/opengl]   argb => 1 planes 1x1 8/0 [rgba8] (argb) [unorm]
[   0.235][d][vo/gpu/opengl]   bgra => 1 planes 1x1 8/0 [rgba8] (bgra) [unorm]
[   0.235][d][vo/gpu/opengl]   abgr => 1 planes 1x1 8/0 [rgba8] (abgr) [unorm]
[   0.235][d][vo/gpu/opengl]   rgba => 1 planes 1x1 8/0 [rgba8] (rgba) [unorm]
[   0.235][d][vo/gpu/opengl]   bgr24 => 1 planes 1x1 8/0 [rgb8] (bgr) [unorm]
[   0.235][d][vo/gpu/opengl]   rgb24 => 1 planes 1x1 8/0 [rgb8] (rgb) [unorm]
[   0.235][d][vo/gpu/opengl]   0rgb => 1 planes 1x1 8/0 [rgba8] (_rgb) [unorm]
[   0.235][d][vo/gpu/opengl]   bgr0 => 1 planes 1x1 8/0 [rgba8] (bgr) [unorm]
[   0.235][d][vo/gpu/opengl]   0bgr => 1 planes 1x1 8/0 [rgba8] (_bgr) [unorm]
[   0.235][d][vo/gpu/opengl]   rgb0 => 1 planes 1x1 8/0 [rgba8] (rgb) [unorm]
[   0.235][d][vo/gpu/opengl]   rgba64 => 1 planes 1x1 16/0 [rgba16] (rgba) [unorm]
[   0.235][d][vo/gpu/opengl]   rgb565 => 1 planes 1x1 0/0 [rgb565] (rgb) [unknown]
[   0.235][d][vo/gpu/opengl]   pal8
[   0.235][d][vo/gpu/opengl]   vdpau
[   0.235][d][vo/gpu/opengl]   d3d11
[   0.235][d][vo/gpu/opengl]   dxva2_vld
[   0.235][d][vo/gpu/opengl]   mmal
[   0.235][d][vo/gpu/opengl]   mediacodec
[   0.235][d][vo/gpu/opengl]   cuda
[   0.235][d][vo/gpu/opengl]   yap8 => 2 planes 1x1 8/0 [r8/r8] (r/a) [unorm]
[   0.235][d][vo/gpu/opengl]   yap16 => 2 planes 1x1 16/0 [r16/r16] (r/a) [unorm]
[   0.235][d][vo/gpu/opengl]   grayaf32 => 2 planes 1x1 32/0 [r16f/r16f] (r/a) [float]
[   0.235][d][vo/gpu/opengl]   yuv444pf => 3 planes 1x1 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   0.235][d][vo/gpu/opengl]   yuva444pf => 4 planes 1x1 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   0.235][d][vo/gpu/opengl]   yuv420pf => 3 planes 2x2 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   0.235][d][vo/gpu/opengl]   yuva420pf => 4 planes 2x2 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   0.235][d][vo/gpu/opengl]   yuv422pf => 3 planes 2x1 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   0.235][d][vo/gpu/opengl]   yuva422pf => 4 planes 2x1 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   0.235][d][vo/gpu/opengl]   yuv440pf => 3 planes 1x2 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   0.235][d][vo/gpu/opengl]   yuva440pf => 4 planes 1x2 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   0.235][d][vo/gpu/opengl]   yuv410pf => 3 planes 4x4 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   0.235][d][vo/gpu/opengl]   yuva410pf => 4 planes 4x4 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   0.235][d][vo/gpu/opengl]   yuv411pf => 3 planes 4x1 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   0.235][d][vo/gpu/opengl]   yuva411pf => 4 planes 4x1 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   0.235][d][vo/gpu/opengl]   rgb30 => 1 planes 1x1 10/0 [rgb10_a2] (bgr) [unknown]
[   0.235][d][vo/gpu/opengl]   y1 => 1 planes 1x1 8/-7 [r8] (r) [unorm]
[   0.235][d][vo/gpu/opengl]   gbrp1 => 3 planes 1x1 8/-7 [r8/r8/r8] (g/b/r) [unorm]
[   0.235][d][vo/gpu/opengl]   gbrp2 => 3 planes 1x1 8/-6 [r8/r8/r8] (g/b/r) [unorm]
[   0.235][d][vo/gpu/opengl]   gbrp3 => 3 planes 1x1 8/-5 [r8/r8/r8] (g/b/r) [unorm]
[   0.235][d][vo/gpu/opengl]   gbrp4 => 3 planes 1x1 8/-4 [r8/r8/r8] (g/b/r) [unorm]
[   0.235][d][vo/gpu/opengl]   gbrp5 => 3 planes 1x1 8/-3 [r8/r8/r8] (g/b/r) [unorm]
[   0.235][d][vo/gpu/opengl]   gbrp6 => 3 planes 1x1 8/-2 [r8/r8/r8] (g/b/r) [unorm]
[   0.235][d][vo/gpu/opengl]   vdpau_output
[   0.235][d][vo/gpu/opengl]   vaapi
[   0.235][d][vo/gpu/opengl]   videotoolbox
[   0.235][d][vo/gpu/opengl]   vulkan
[   0.235][d][vo/gpu/opengl]   drm_prime
[   0.235][d][vo/gpu/opengl]   yuyv422
[   0.235][d][vo/gpu/opengl]   yuv422p => 3 planes 2x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuv410p => 3 planes 4x4 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuv411p => 3 planes 4x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   monow
[   0.235][d][vo/gpu/opengl]   monob
[   0.235][d][vo/gpu/opengl]   yuvj422p => 3 planes 2x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   uyyvyy411
[   0.235][d][vo/gpu/opengl]   bgr8
[   0.235][d][vo/gpu/opengl]   bgr4
[   0.235][d][vo/gpu/opengl]   bgr4_byte
[   0.235][d][vo/gpu/opengl]   rgb8
[   0.235][d][vo/gpu/opengl]   rgb4
[   0.235][d][vo/gpu/opengl]   rgb4_byte
[   0.235][d][vo/gpu/opengl]   nv21 => 2 planes 2x2 8/0 [r8/rg8] (r/bg) [unorm]
[   0.235][d][vo/gpu/opengl]   gray16be
[   0.235][d][vo/gpu/opengl]   yuv440p => 3 planes 1x2 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuvj440p => 3 planes 1x2 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuva420p => 4 planes 2x2 8/0 [r8/r8/r8/r8] (r/g/b/a) [unorm]
[   0.235][d][vo/gpu/opengl]   rgb48be
[   0.235][d][vo/gpu/opengl]   rgb48 => 1 planes 1x1 16/0 [rgb16] (rgb) [unorm]
[   0.235][d][vo/gpu/opengl]   rgb565be
[   0.235][d][vo/gpu/opengl]   rgb555be
[   0.235][d][vo/gpu/opengl]   rgb555
[   0.235][d][vo/gpu/opengl]   bgr565be
[   0.235][d][vo/gpu/opengl]   bgr565
[   0.235][d][vo/gpu/opengl]   bgr555be
[   0.235][d][vo/gpu/opengl]   bgr555
[   0.235][d][vo/gpu/opengl]   yuv420p16 => 3 planes 2x2 16/0 [r16/r16/r16] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuv420p16be
[   0.235][d][vo/gpu/opengl]   yuv422p16 => 3 planes 2x1 16/0 [r16/r16/r16] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuv422p16be
[   0.235][d][vo/gpu/opengl]   yuv444p16 => 3 planes 1x1 16/0 [r16/r16/r16] (r/g/b) [unorm]
[   0.235][d][vo/gpu/opengl]   yuv444p16be
[   0.235][d][vo/gpu/opengl]   rgb444
[   0.235][d][vo/gpu/opengl]   rgb444be
[   0.236][d][vo/gpu/opengl]   bgr444
[   0.236][d][vo/gpu/opengl]   bgr444be
[   0.236][d][vo/gpu/opengl]   ya8 => 1 planes 1x1 8/0 [rg8] (ra) [unorm]
[   0.236][d][vo/gpu/opengl]   bgr48be
[   0.236][d][vo/gpu/opengl]   bgr48 => 1 planes 1x1 16/0 [rgb16] (bgr) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv420p9be
[   0.236][d][vo/gpu/opengl]   yuv420p9 => 3 planes 2x2 16/-7 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv420p10be
[   0.236][d][vo/gpu/opengl]   yuv420p10 => 3 planes 2x2 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv422p10be
[   0.236][d][vo/gpu/opengl]   yuv422p10 => 3 planes 2x1 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv444p9be
[   0.236][d][vo/gpu/opengl]   yuv444p9 => 3 planes 1x1 16/-7 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv444p10be
[   0.236][d][vo/gpu/opengl]   yuv444p10 => 3 planes 1x1 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv422p9be
[   0.236][d][vo/gpu/opengl]   yuv422p9 => 3 planes 2x1 16/-7 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrp => 3 planes 1x1 8/0 [r8/r8/r8] (g/b/r) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrp9be
[   0.236][d][vo/gpu/opengl]   gbrp9 => 3 planes 1x1 16/-7 [r16/r16/r16] (g/b/r) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrp10be
[   0.236][d][vo/gpu/opengl]   gbrp10 => 3 planes 1x1 16/-6 [r16/r16/r16] (g/b/r) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrp16be
[   0.236][d][vo/gpu/opengl]   gbrp16 => 3 planes 1x1 16/0 [r16/r16/r16] (g/b/r) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva422p => 4 planes 2x1 8/0 [r8/r8/r8/r8] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva444p => 4 planes 1x1 8/0 [r8/r8/r8/r8] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva420p9be
[   0.236][d][vo/gpu/opengl]   yuva420p9 => 4 planes 2x2 16/-7 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva422p9be
[   0.236][d][vo/gpu/opengl]   yuva422p9 => 4 planes 2x1 16/-7 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva444p9be
[   0.236][d][vo/gpu/opengl]   yuva444p9 => 4 planes 1x1 16/-7 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva420p10be
[   0.236][d][vo/gpu/opengl]   yuva420p10 => 4 planes 2x2 16/-6 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva422p10be
[   0.236][d][vo/gpu/opengl]   yuva422p10 => 4 planes 2x1 16/-6 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva444p10be
[   0.236][d][vo/gpu/opengl]   yuva444p10 => 4 planes 1x1 16/-6 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva420p16be
[   0.236][d][vo/gpu/opengl]   yuva420p16 => 4 planes 2x2 16/0 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva422p16be
[   0.236][d][vo/gpu/opengl]   yuva422p16 => 4 planes 2x1 16/0 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva444p16be
[   0.236][d][vo/gpu/opengl]   yuva444p16 => 4 planes 1x1 16/0 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   xyz12 => 1 planes 1x1 16/4 [rgb16] (rgb) [unorm]
[   0.236][d][vo/gpu/opengl]   xyz12be
[   0.236][d][vo/gpu/opengl]   nv16 => 2 planes 2x1 8/0 [r8/rg8] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   nv20 => 2 planes 2x1 16/-6 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   nv20be
[   0.236][d][vo/gpu/opengl]   rgba64be
[   0.236][d][vo/gpu/opengl]   bgra64be
[   0.236][d][vo/gpu/opengl]   bgra64 => 1 planes 1x1 16/0 [rgba16] (bgra) [unorm]
[   0.236][d][vo/gpu/opengl]   yvyu422
[   0.236][d][vo/gpu/opengl]   ya16be
[   0.236][d][vo/gpu/opengl]   ya16 => 1 planes 1x1 16/0 [rg16] (ra) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrap => 4 planes 1x1 8/0 [r8/r8/r8/r8] (g/b/r/a) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrap16be
[   0.236][d][vo/gpu/opengl]   gbrap16 => 4 planes 1x1 16/0 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   0.236][d][vo/gpu/opengl]   qsv
[   0.236][d][vo/gpu/opengl]   d3d11va_vld
[   0.236][d][vo/gpu/opengl]   yuv420p12be
[   0.236][d][vo/gpu/opengl]   yuv420p12 => 3 planes 2x2 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv420p14be
[   0.236][d][vo/gpu/opengl]   yuv420p14 => 3 planes 2x2 16/-2 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv422p12be
[   0.236][d][vo/gpu/opengl]   yuv422p12 => 3 planes 2x1 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv422p14be
[   0.236][d][vo/gpu/opengl]   yuv422p14 => 3 planes 2x1 16/-2 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv444p12be
[   0.236][d][vo/gpu/opengl]   yuv444p12 => 3 planes 1x1 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv444p14be
[   0.236][d][vo/gpu/opengl]   yuv444p14 => 3 planes 1x1 16/-2 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrp12be
[   0.236][d][vo/gpu/opengl]   gbrp12 => 3 planes 1x1 16/-4 [r16/r16/r16] (g/b/r) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrp14be
[   0.236][d][vo/gpu/opengl]   gbrp14 => 3 planes 1x1 16/-2 [r16/r16/r16] (g/b/r) [unorm]
[   0.236][d][vo/gpu/opengl]   yuvj411p => 3 planes 4x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   bayer_bggr8
[   0.236][d][vo/gpu/opengl]   bayer_rggb8
[   0.236][d][vo/gpu/opengl]   bayer_gbrg8
[   0.236][d][vo/gpu/opengl]   bayer_grbg8
[   0.236][d][vo/gpu/opengl]   bayer_bggr16
[   0.236][d][vo/gpu/opengl]   bayer_bggr16be
[   0.236][d][vo/gpu/opengl]   bayer_rggb16
[   0.236][d][vo/gpu/opengl]   bayer_rggb16be
[   0.236][d][vo/gpu/opengl]   bayer_gbrg16
[   0.236][d][vo/gpu/opengl]   bayer_gbrg16be
[   0.236][d][vo/gpu/opengl]   bayer_grbg16
[   0.236][d][vo/gpu/opengl]   bayer_grbg16be
[   0.236][d][vo/gpu/opengl]   yuv440p10 => 3 planes 1x2 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv440p10be
[   0.236][d][vo/gpu/opengl]   yuv440p12 => 3 planes 1x2 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   0.236][d][vo/gpu/opengl]   yuv440p12be
[   0.236][d][vo/gpu/opengl]   ayuv64 => 1 planes 1x1 16/0 [rgba16] (argb) [unorm]
[   0.236][d][vo/gpu/opengl]   ayuv64be
[   0.236][d][vo/gpu/opengl]   p010be
[   0.236][d][vo/gpu/opengl]   gbrap12be
[   0.236][d][vo/gpu/opengl]   gbrap12 => 4 planes 1x1 16/-4 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrap10be
[   0.236][d][vo/gpu/opengl]   gbrap10 => 4 planes 1x1 16/-6 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   0.236][d][vo/gpu/opengl]   gray12be
[   0.236][d][vo/gpu/opengl]   gray12 => 1 planes 1x1 16/-4 [r16] (r) [unorm]
[   0.236][d][vo/gpu/opengl]   gray10be
[   0.236][d][vo/gpu/opengl]   gray10 => 1 planes 1x1 16/-6 [r16] (r) [unorm]
[   0.236][d][vo/gpu/opengl]   p016 => 2 planes 2x2 16/0 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   p016be
[   0.236][d][vo/gpu/opengl]   gray9be
[   0.236][d][vo/gpu/opengl]   gray9 => 1 planes 1x1 16/-7 [r16] (r) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrpf32be
[   0.236][d][vo/gpu/opengl]   gbrpf32 => 3 planes 1x1 32/0 [r16f/r16f/r16f] (g/b/r) [float]
[   0.236][d][vo/gpu/opengl]   gbrapf32be
[   0.236][d][vo/gpu/opengl]   gbrapf32 => 4 planes 1x1 32/0 [r16f/r16f/r16f/r16f] (g/b/r/a) [float]
[   0.236][d][vo/gpu/opengl]   opencl
[   0.236][d][vo/gpu/opengl]   gray14be
[   0.236][d][vo/gpu/opengl]   gray14 => 1 planes 1x1 16/-2 [r16] (r) [unorm]
[   0.236][d][vo/gpu/opengl]   grayf32be
[   0.236][d][vo/gpu/opengl]   grayf32 => 1 planes 1x1 32/0 [r16f] (r) [float]
[   0.236][d][vo/gpu/opengl]   yuva422p12be
[   0.236][d][vo/gpu/opengl]   yuva422p12 => 4 planes 2x1 16/-4 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   yuva444p12be
[   0.236][d][vo/gpu/opengl]   yuva444p12 => 4 planes 1x1 16/-4 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   0.236][d][vo/gpu/opengl]   nv24 => 2 planes 1x1 8/0 [r8/rg8] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   nv42 => 2 planes 1x1 8/0 [r8/rg8] (r/bg) [unorm]
[   0.236][d][vo/gpu/opengl]   y210be
[   0.236][d][vo/gpu/opengl]   y210
[   0.236][d][vo/gpu/opengl]   x2rgb10be
[   0.236][d][vo/gpu/opengl]   x2bgr10
[   0.236][d][vo/gpu/opengl]   x2bgr10be
[   0.236][d][vo/gpu/opengl]   p210be
[   0.236][d][vo/gpu/opengl]   p210 => 2 planes 2x1 16/6 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   p410be
[   0.236][d][vo/gpu/opengl]   p410 => 2 planes 1x1 16/6 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   p216be
[   0.236][d][vo/gpu/opengl]   p216 => 2 planes 2x1 16/0 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   p416be
[   0.236][d][vo/gpu/opengl]   p416 => 2 planes 1x1 16/0 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   vuya => 1 planes 1x1 8/0 [rgba8] (bgra) [unorm]
[   0.236][d][vo/gpu/opengl]   rgbaf16be
[   0.236][d][vo/gpu/opengl]   rgbaf16
[   0.236][d][vo/gpu/opengl]   vuyx => 1 planes 1x1 8/0 [rgba8] (bgr) [unorm]
[   0.236][d][vo/gpu/opengl]   p012 => 2 planes 2x2 16/4 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   p012be
[   0.236][d][vo/gpu/opengl]   y212be
[   0.236][d][vo/gpu/opengl]   y212
[   0.236][d][vo/gpu/opengl]   xv30be
[   0.236][d][vo/gpu/opengl]   xv30
[   0.236][d][vo/gpu/opengl]   xv36be
[   0.236][d][vo/gpu/opengl]   xv36 => 1 planes 1x1 16/4 [rgba16] (grb) [unorm]
[   0.236][d][vo/gpu/opengl]   rgbf32be
[   0.236][d][vo/gpu/opengl]   rgbf32
[   0.236][d][vo/gpu/opengl]   rgbaf32be
[   0.236][d][vo/gpu/opengl]   rgbaf32
[   0.236][d][vo/gpu/opengl]   p212be
[   0.236][d][vo/gpu/opengl]   p212 => 2 planes 2x1 16/4 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   p412be
[   0.236][d][vo/gpu/opengl]   p412 => 2 planes 1x1 16/4 [r16/rg16] (r/gb) [unorm]
[   0.236][d][vo/gpu/opengl]   gbrap14be
[   0.236][d][vo/gpu/opengl]   gbrap14 => 4 planes 1x1 16/-2 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   0.236][d][vo/gpu/opengl]   d3d12
[   0.236][v][vo/gpu] Testing FBO format rgba16f
[   0.236][d][vo/gpu] Resizing texture: 16x16
[   0.236][v][vo/gpu] Using FBO format rgba16f.
[   0.236][d][global] cache path: '' -> '/home/brown/.cache/mpv'
[   0.239][v][vo/gpu] Resize: 0x0
[   0.239][v][vo/gpu] Assuming 60.001000 FPS for display sync.
[   0.239][v][vd] Container reported FPS: 25.000000
[   0.240][v][vd] Codec list:
[   0.240][v][vd]     vp9 - Google VP9
[   0.240][v][vd]     vp9_v4l2m2m (vp9) - V4L2 mem2mem VP9 decoder wrapper
[   0.240][v][vd]     libvpx-vp9 (vp9) - libvpx VP9
[   0.240][v][vd]     vp9_cuvid (vp9) - Nvidia CUVID VP9 decoder
[   0.240][v][vd]     vp9_qsv (vp9) - VP9 video (Intel Quick Sync Video acceleration)
[   0.240][v][vd] Opening decoder vp9
[   0.240][v][vd] Looking at hwdec vp9-nvdec...
[   0.240][v][vo/gpu] Loading hwdec drivers for format: 'cuda'
[   0.240][v][vo/gpu] Loading hwdec driver 'cuda'
[   0.240][v][vo/gpu/cuda] Failed to load CUDA symbols
[   0.240][v][vo/gpu] Loading failed.
[   0.240][v][vd] Could not create device.
[   0.240][v][vd] Looking at hwdec vp9-vaapi...
[   0.240][v][vo/gpu] Loading hwdec drivers for format: 'vaapi'
[   0.240][v][vo/gpu] Loading hwdec driver 'vaapi'
[   0.240][v][vo/gpu/vaapi] Using EGL dmabuf interop via GL_EXT_EGL_image_storage
[   0.240][v][vo/gpu/vaapi] Trying to open a x11 VA display...
[   0.240][v][vo/gpu/vaapi] Trying to open a wayland VA display...
[   0.243][v][vo/gpu/vaapi/vaapi] libva: VA-API version 1.21.0
[   0.243][v][vo/gpu/vaapi/vaapi] libva: User environment variable requested driver 'radeonsi'
[   0.243][v][vo/gpu/vaapi/vaapi] libva: Trying to open /usr/lib/dri/radeonsi_drv_video.so
[   0.255][v][vo/gpu/vaapi/vaapi] libva: Found init function __vaDriverInit_1_21
[   0.270][v][vo/gpu/vaapi/vaapi] libva: va_openDriver() returns 0
[   0.270][v][vo/gpu/vaapi/vaapi] Initialized VAAPI: version 1.21
[   0.270][d][ffmpeg] AVHWDeviceContext: VAAPI driver: Mesa Gallium driver 24.1.3-arch1.1 for AMD Radeon Vega 3 Graphics (radeonsi, raven2, LLVM 18.1.8, DRM 3.57, 6.9.9-1-cachyos).
[   0.270][d][ffmpeg] AVHWDeviceContext: Driver not found in known nonstandard list, using standard behaviour.
[   0.270][v][vo/gpu/vaapi] Going to probe surface formats (may log bogus errors)...
[   0.318][d][vo/gpu/vaapi] Failed to create mapper
[   0.318][d][vo/gpu/vaapi] Unsupported format: yuyv422
[   0.318][d][vo/gpu/vaapi] Failed to create mapper
[   0.318][d][vo/gpu/vaapi] Unsupported format: uyvy422
[   0.325][d][vo/gpu/vaapi] vaExportSurfaceHandle() failed (an unsupported memory type was supplied)
[   0.325][d][vo/gpu/vaapi] Unsupported format: argb
[   0.325][d][vo/gpu/vaapi] Supported formats:
[   0.325][d][vo/gpu/vaapi]  nv12
[   0.325][d][vo/gpu/vaapi]  p010
[   0.325][d][vo/gpu/vaapi]  yuv420p
[   0.325][d][vo/gpu/vaapi]  gray
[   0.325][d][vo/gpu/vaapi]  yuv444p
[   0.325][d][vo/gpu/vaapi]  bgra
[   0.325][d][vo/gpu/vaapi]  rgba
[   0.325][d][vo/gpu/vaapi]  bgr0
[   0.325][d][vo/gpu/vaapi]  rgb0
[   0.325][v][vo/gpu/vaapi] Done probing surface formats.
[   0.325][v][vd] Trying hardware decoding via vp9-vaapi.
[   0.325][v][vd] Selected codec: Google VP9
[   0.325][v][vf] User filter list:
[   0.325][v][vf]   (empty)
[   0.326][v][ad] Codec list:
[   0.326][v][ad]     opus - Opus
[   0.326][v][ad]     libopus (opus) - libopus Opus
[   0.326][v][ad] Opening decoder opus
[   0.326][v][ad] Requesting 1 threads for decoding.
[   0.326][v][ad] Selected codec: Opus
[   0.326][v][af] User filter list:
[   0.326][v][af]   (empty)
[   0.326][v][cplayer] Starting playback...
[   0.326][d][mkv] stream 1: resize index to 128
[   0.326][v][vd] Pixel formats supported by decoder: cuda vaapi vdpau yuv420p
[   0.326][v][vd] Codec profile: Profile 0 (0x0)
[   0.327][d][mkv] stream 0: resize index to 128
[   0.328][v][vd] Requesting pixfmt 'vaapi' from decoder.
[   0.348][i][vd] Using hardware decoding (vaapi).
[   0.348][v][vd] Decoder format: 1280x720 [0:1] vaapi[nv12] bt.709/auto/auto/limited/auto CL=unknown crop=1280x720+0+0
[   0.348][v][vd] Using container aspect ratio.
[   0.348][v][vf] [in] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display CL=mpeg2/4/h264 crop=1280x720+0+0
[   0.348][v][vf] [userdeint] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display CL=mpeg2/4/h264 crop=1280x720+0+0
[   0.348][v][vf] [userdeint] (disabled)
[   0.348][v][vf] [autorotate] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display CL=mpeg2/4/h264 crop=1280x720+0+0
[   0.348][v][vf] [autorotate] (disabled)
[   0.348][v][vf] [convert] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display CL=mpeg2/4/h264 crop=1280x720+0+0
[   0.349][v][vo/gpu] Loading hwdec drivers for format: 'vaapi'
[   0.349][d][hwupload] looking at format vaapi/nv12
[   0.349][d][hwupload]   vo accepts nv12
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/p010
[   0.349][d][hwupload]   vo accepts p010
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/yuv420p
[   0.349][d][hwupload]   vo accepts yuv420p
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/yuyv422
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/uyvy422
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/gray
[   0.349][d][hwupload]   vo accepts gray
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/yuv444p
[   0.349][d][hwupload]   vo accepts yuv444p
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/bgra
[   0.349][d][hwupload]   vo accepts bgra
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/rgba
[   0.349][d][hwupload]   vo accepts rgba
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/argb
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/bgr0
[   0.349][d][hwupload]   vo accepts bgr0
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][d][hwupload] looking at format vaapi/rgb0
[   0.349][d][hwupload]   vo accepts rgb0
[   0.349][d][hwupload]   supports: bgra rgba bgr0 rgb0 nv12 p010
[   0.349][v][vf] [out] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display CL=mpeg2/4/h264 crop=1280x720+0+0
[   0.349][v][af] [in] 48000Hz stereo 2ch floatp
[   0.349][v][af] [userspeed] 48000Hz stereo 2ch floatp
[   0.349][v][af] [userspeed] (disabled)
[   0.349][v][af] [convert] 48000Hz stereo 2ch floatp
[   0.351][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[   0.351][d][cplayer] Run command: define-section, flags=64, args=[name="input_osc", contents="", flags="default"]
[   0.351][d][cplayer] Run command: enable-section, flags=64, args=[name="input_osc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.351][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_osc", contents="", flags="force"]
[   0.351][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_osc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.351][d][mkv] stream 1: resize index to 256
[   0.352][d][global] config path: 'fonts' -/-> '/home/brown/.config/mpv/fonts'
[   0.352][d][global] config path: 'fonts' -/-> '/home/brown/.mpv/fonts'
[   0.352][d][global] config path: 'fonts' -/-> '/etc/mpv/fonts'
[   0.352][d][osd/libass] ASS library version: 0x1702000 (runtime 0x1703000)
[   0.352][v][osd/libass] libass API version: 0x1703000
[   0.352][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5-dirty
[   0.352][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 9.0.0 (COMPLEX)
[   0.352][d][global] config path: 'subfont.ttf' -/-> '/home/brown/.config/mpv/subfont.ttf'
[   0.352][d][global] config path: 'subfont.ttf' -/-> '/home/brown/.mpv/subfont.ttf'
[   0.352][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.352][d][global] config path: 'fonts.conf' -/-> '/home/brown/.config/mpv/fonts.conf'
[   0.352][d][global] config path: 'fonts.conf' -/-> '/home/brown/.mpv/fonts.conf'
[   0.352][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.352][v][osd/libass] Setting up fonts...
[   0.371][v][osd/libass] Using font provider fontconfig
[   0.371][v][osd/libass] Done.
[   0.372][v][ao] Trying audio driver 'pipewire'
[   0.372][v][ao/pipewire] requested format: 48000 Hz, stereo channels, floatp
[   0.373][v][ao/pipewire] Headers version: 1.2.0
[   0.373][v][ao/pipewire] Library version: 1.2.1
[   0.375][v][mkv] EOF reached.
[   0.382][v][ao/pipewire] Core user: brown
[   0.382][v][ao/pipewire] Core host: mrlectus
[   0.382][v][ao/pipewire] Core version: 1.2.1
[   0.382][v][ao/pipewire] Core name: pipewire-0
[   0.382][d][ao/pipewire] Stream state changed: old_state=unconnected state=connecting error=(null)
[   0.383][v][ao/pipewire] using soft-buffer of 9600 samples.
[   0.383][i][cplayer] AO: [pipewire] 48000Hz stereo 2ch floatp
[   0.383][v][cplayer] AO: Description: PipeWire audio output
[   0.384][v][af] [convert] (disabled)
[   0.384][v][af] [out] 48000Hz stereo 2ch floatp
[   0.385][d][osc] osc_init
[   0.385][d][ao/pipewire] Stream state changed: old_state=connecting state=paused error=(null)
[   0.386][i][cplayer] VO: [gpu] 1280x720 vaapi[nv12]
[   0.386][v][cplayer] VO: Description: Shader-based GPU Renderer
[   0.386][v][vo/gpu] reconfig to 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display CL=mpeg2/4/h264 crop=1280x720+0+0
[   0.386][v][vo/gpu/wayland] Reconfiguring!
[   0.386][d][vo/gpu] max content size: 1920x1080
[   0.386][d][vo/gpu] monitor size: 1920x1080
[   0.386][v][vo/gpu] Resize: 1280x720
[   0.386][v][vo/gpu] Window size: 1280x720 (Borders: l=0 t=0 r=0 b=0)
[   0.386][v][vo/gpu] Video source: 1280x720 (1:1)
[   0.386][v][vo/gpu] Video display: (0, 0) 1280x720 -> (0, 0) 1280x720
[   0.386][v][vo/gpu] Video scale: 1.000000/1.000000
[   0.386][v][vo/gpu] OSD borders: l=0 t=0 r=0 b=0
[   0.386][v][vo/gpu] Video borders: l=0 t=0 r=0 b=0
[   0.386][v][vo/gpu] Testing FBO format rgba16f
[   0.386][d][vo/gpu] Resizing texture: 16x16
[   0.387][v][vo/gpu] Using FBO format rgba16f.
[   0.387][v][vo/gpu/wayland] Handling resize on the egl side
[   0.387][v][vo/gpu] Resize: 1280x720
[   0.387][v][vo/gpu] Window size: 1280x720 (Borders: l=0 t=0 r=0 b=0)
[   0.387][v][vo/gpu] Video source: 1280x720 (1:1)
[   0.387][v][vo/gpu] Video display: (0, 0) 1280x720 -> (0, 0) 1280x720
[   0.387][v][vo/gpu] Video scale: 1.000000/1.000000
[   0.387][v][vo/gpu] OSD borders: l=0 t=0 r=0 b=0
[   0.387][v][vo/gpu] Video borders: l=0 t=0 r=0 b=0
[   0.387][v][vo/gpu] Reported display depth: 10
[   0.388][d][vo/gpu] Resizing texture: 640x720
[   0.390][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.390][d][vo/gpu] Trying to load shader from disk...
[   0.403][d][vo/gpu/opengl] vertex shader source:
[   0.403][d][vo/gpu/opengl] [  1] #version 440
[   0.403][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.403][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.403][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.403][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.403][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.403][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.403][d][vo/gpu/opengl] [  8] void main() {
[   0.403][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.403][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[   0.403][d][vo/gpu/opengl] [ 11] }
[   0.403][d][vo/gpu/opengl] fragment shader source:
[   0.403][d][vo/gpu/opengl] [  1] #version 440
[   0.403][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.403][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.403][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.403][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.403][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.403][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   0.403][d][vo/gpu/opengl] [  8] layout(offset=0) vec2 texture_size0;
[   0.403][d][vo/gpu/opengl] [  9] layout(offset=16) mat2 texture_rot0;
[   0.403][d][vo/gpu/opengl] [ 10] layout(offset=48) vec2 texture_off0;
[   0.403][d][vo/gpu/opengl] [ 11] layout(offset=56) vec2 pixel_size0;
[   0.403][d][vo/gpu/opengl] [ 12] };
[   0.403][d][vo/gpu/opengl] [ 13] uniform sampler2D lut;
[   0.403][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   0.403][d][vo/gpu/opengl] [ 15] void main() {
[   0.403][d][vo/gpu/opengl] [ 16] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.403][d][vo/gpu/opengl] [ 17] // upscaling plane 1
[   0.403][d][vo/gpu/opengl] [ 18] #undef tex
[   0.403][d][vo/gpu/opengl] [ 19] #undef texmap
[   0.403][d][vo/gpu/opengl] [ 20] #define tex texture0
[   0.403][d][vo/gpu/opengl] [ 21] #define texmap texmap0
[   0.403][d][vo/gpu/opengl] [ 22] vec2 pos = texcoord0;
[   0.403][d][vo/gpu/opengl] [ 23] vec2 size = texture_size0;
[   0.403][d][vo/gpu/opengl] [ 24] vec2 pt = pixel_size0;
[   0.403][d][vo/gpu/opengl] [ 25] // first pass
[   0.403][d][vo/gpu/opengl] [ 26] color = vec4(0.0);
[   0.403][d][vo/gpu/opengl] [ 27] {
[   0.403][d][vo/gpu/opengl] [ 28] vec2 dir = vec2(0.0, 1.0);
[   0.403][d][vo/gpu/opengl] [ 29] pt *= dir;
[   0.403][d][vo/gpu/opengl] [ 30] float fcoord = dot(fract(pos * size - vec2(0.5)), dir);
[   0.403][d][vo/gpu/opengl] [ 31] vec2 base = pos - fcoord * pt - pt * vec2(2.0);
[   0.403][d][vo/gpu/opengl] [ 32] vec4 c;
[   0.403][d][vo/gpu/opengl] [ 33] float ypos = LUT_POS(fcoord, 256.0);
[   0.403][d][vo/gpu/opengl] [ 34] float weights[6];
[   0.403][d][vo/gpu/opengl] [ 35] c = texture(lut, vec2(0.250000, ypos));
[   0.403][d][vo/gpu/opengl] [ 36] weights[0] = c[0];
[   0.403][d][vo/gpu/opengl] [ 37] weights[1] = c[1];
[   0.403][d][vo/gpu/opengl] [ 38] weights[2] = c[2];
[   0.403][d][vo/gpu/opengl] [ 39] weights[3] = c[3];
[   0.403][d][vo/gpu/opengl] [ 40] c = texture(lut, vec2(0.750000, ypos));
[   0.403][d][vo/gpu/opengl] [ 41] weights[4] = c[0];
[   0.403][d][vo/gpu/opengl] [ 42] weights[5] = c[1];
[   0.403][d][vo/gpu/opengl] [ 43] // scaler samples
[   0.403][d][vo/gpu/opengl] [ 44] c = texture(tex, base + pt * vec2(0.0));
[   0.403][d][vo/gpu/opengl] [ 45] color += vec4(weights[0]) * c;
[   0.403][d][vo/gpu/opengl] [ 46] c = texture(tex, base + pt * vec2(1.0));
[   0.403][d][vo/gpu/opengl] [ 47] color += vec4(weights[1]) * c;
[   0.403][d][vo/gpu/opengl] [ 48] c = texture(tex, base + pt * vec2(2.0));
[   0.403][d][vo/gpu/opengl] [ 49] color += vec4(weights[2]) * c;
[   0.403][d][vo/gpu/opengl] [ 50] c = texture(tex, base + pt * vec2(3.0));
[   0.403][d][vo/gpu/opengl] [ 51] color += vec4(weights[3]) * c;
[   0.403][d][vo/gpu/opengl] [ 52] c = texture(tex, base + pt * vec2(4.0));
[   0.403][d][vo/gpu/opengl] [ 53] color += vec4(weights[4]) * c;
[   0.403][d][vo/gpu/opengl] [ 54] c = texture(tex, base + pt * vec2(5.0));
[   0.403][d][vo/gpu/opengl] [ 55] color += vec4(weights[5]) * c;
[   0.403][d][vo/gpu/opengl] [ 56] }
[   0.403][d][vo/gpu/opengl] [ 57] color *= 1.000000;
[   0.403][d][vo/gpu/opengl] [ 58] out_color = color;
[   0.403][d][vo/gpu/opengl] [ 59] }
[   0.407][d][vo/gpu/opengl] shader link log (status=1): 
[   0.409][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/46E6B30AC3FB982839DA314F6381484E7D9FAF77DEB67807CF0A8CE9438965E0
[   0.410][d][vo/gpu] Resizing texture: 1280x720
[   0.417][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.417][d][vo/gpu] Trying to load shader from disk...
[   0.418][d][vo/gpu/opengl] vertex shader source:
[   0.418][d][vo/gpu/opengl] [  1] #version 440
[   0.418][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.418][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.418][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.418][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.418][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.418][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.418][d][vo/gpu/opengl] [  8] void main() {
[   0.418][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.418][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[   0.418][d][vo/gpu/opengl] [ 11] }
[   0.419][d][vo/gpu/opengl] fragment shader source:
[   0.419][d][vo/gpu/opengl] [  1] #version 440
[   0.419][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.419][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.419][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.419][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.419][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.419][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   0.419][d][vo/gpu/opengl] [  8] layout(offset=0) vec2 texture_size0;
[   0.419][d][vo/gpu/opengl] [  9] layout(offset=16) mat2 texture_rot0;
[   0.419][d][vo/gpu/opengl] [ 10] layout(offset=48) vec2 texture_off0;
[   0.419][d][vo/gpu/opengl] [ 11] layout(offset=56) vec2 pixel_size0;
[   0.419][d][vo/gpu/opengl] [ 12] };
[   0.419][d][vo/gpu/opengl] [ 13] uniform sampler2D lut;
[   0.419][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   0.419][d][vo/gpu/opengl] [ 15] void main() {
[   0.419][d][vo/gpu/opengl] [ 16] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.419][d][vo/gpu/opengl] [ 17] #undef tex
[   0.419][d][vo/gpu/opengl] [ 18] #undef texmap
[   0.419][d][vo/gpu/opengl] [ 19] #define tex texture0
[   0.419][d][vo/gpu/opengl] [ 20] #define texmap texmap0
[   0.419][d][vo/gpu/opengl] [ 21] vec2 pos = texcoord0;
[   0.419][d][vo/gpu/opengl] [ 22] vec2 size = texture_size0;
[   0.419][d][vo/gpu/opengl] [ 23] vec2 pt = pixel_size0;
[   0.419][d][vo/gpu/opengl] [ 24] color = vec4(0.0);
[   0.419][d][vo/gpu/opengl] [ 25] {
[   0.419][d][vo/gpu/opengl] [ 26] vec2 dir = vec2(1.0, 0.0);
[   0.419][d][vo/gpu/opengl] [ 27] pt *= dir;
[   0.419][d][vo/gpu/opengl] [ 28] float fcoord = dot(fract(pos * size - vec2(0.5)), dir);
[   0.419][d][vo/gpu/opengl] [ 29] vec2 base = pos - fcoord * pt - pt * vec2(2.0);
[   0.419][d][vo/gpu/opengl] [ 30] vec4 c;
[   0.419][d][vo/gpu/opengl] [ 31] float ypos = LUT_POS(fcoord, 256.0);
[   0.419][d][vo/gpu/opengl] [ 32] float weights[6];
[   0.419][d][vo/gpu/opengl] [ 33] c = texture(lut, vec2(0.250000, ypos));
[   0.419][d][vo/gpu/opengl] [ 34] weights[0] = c[0];
[   0.419][d][vo/gpu/opengl] [ 35] weights[1] = c[1];
[   0.419][d][vo/gpu/opengl] [ 36] weights[2] = c[2];
[   0.419][d][vo/gpu/opengl] [ 37] weights[3] = c[3];
[   0.419][d][vo/gpu/opengl] [ 38] c = texture(lut, vec2(0.750000, ypos));
[   0.419][d][vo/gpu/opengl] [ 39] weights[4] = c[0];
[   0.419][d][vo/gpu/opengl] [ 40] weights[5] = c[1];
[   0.419][d][vo/gpu/opengl] [ 41] // scaler samples
[   0.419][d][vo/gpu/opengl] [ 42] c = texture(tex, base + pt * vec2(0.0));
[   0.419][d][vo/gpu/opengl] [ 43] color += vec4(weights[0]) * c;
[   0.419][d][vo/gpu/opengl] [ 44] c = texture(tex, base + pt * vec2(1.0));
[   0.419][d][vo/gpu/opengl] [ 45] color += vec4(weights[1]) * c;
[   0.419][d][vo/gpu/opengl] [ 46] c = texture(tex, base + pt * vec2(2.0));
[   0.419][d][vo/gpu/opengl] [ 47] color += vec4(weights[2]) * c;
[   0.419][d][vo/gpu/opengl] [ 48] c = texture(tex, base + pt * vec2(3.0));
[   0.419][d][vo/gpu/opengl] [ 49] color += vec4(weights[3]) * c;
[   0.419][d][vo/gpu/opengl] [ 50] c = texture(tex, base + pt * vec2(4.0));
[   0.419][d][vo/gpu/opengl] [ 51] color += vec4(weights[4]) * c;
[   0.419][d][vo/gpu/opengl] [ 52] c = texture(tex, base + pt * vec2(5.0));
[   0.419][d][vo/gpu/opengl] [ 53] color += vec4(weights[5]) * c;
[   0.419][d][vo/gpu/opengl] [ 54] }
[   0.419][d][vo/gpu/opengl] [ 55] color.b = 0.000000;
[   0.419][d][vo/gpu/opengl] [ 56] color.a = 1.000000;
[   0.419][d][vo/gpu/opengl] [ 57] out_color = color;
[   0.419][d][vo/gpu/opengl] [ 58] }
[   0.424][d][vo/gpu/opengl] shader link log (status=1): 
[   0.424][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/4340237B1B38F40F42D5D481DBEE8FF8F43A33FB5FB71AD071CFD0A0A82318A7
[   0.425][d][vo/gpu] Resizing texture: 1280x720
[   0.425][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.425][d][vo/gpu] Trying to load shader from disk...
[   0.427][d][vo/gpu/opengl] vertex shader source:
[   0.427][d][vo/gpu/opengl] [  1] #version 440
[   0.427][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.427][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.427][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.427][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.427][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.427][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.427][d][vo/gpu/opengl] [  8] in vec2 vertex_texcoord1;
[   0.427][d][vo/gpu/opengl] [  9] out vec2 texcoord1;
[   0.427][d][vo/gpu/opengl] [ 10] void main() {
[   0.427][d][vo/gpu/opengl] [ 11] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.427][d][vo/gpu/opengl] [ 12] texcoord0 = vertex_texcoord0;
[   0.427][d][vo/gpu/opengl] [ 13] texcoord1 = vertex_texcoord1;
[   0.427][d][vo/gpu/opengl] [ 14] }
[   0.427][d][vo/gpu/opengl] fragment shader source:
[   0.427][d][vo/gpu/opengl] [  1] #version 440
[   0.427][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.427][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.427][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.427][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.427][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.427][d][vo/gpu/opengl] [  7] in vec2 texcoord1;
[   0.427][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   0.427][d][vo/gpu/opengl] [  9] layout(offset=0) mat3 colormatrix;
[   0.427][d][vo/gpu/opengl] [ 10] layout(offset=48) vec3 colormatrix_c;
[   0.427][d][vo/gpu/opengl] [ 11] layout(offset=64) vec2 texture_size0;
[   0.427][d][vo/gpu/opengl] [ 12] layout(offset=80) mat2 texture_rot0;
[   0.427][d][vo/gpu/opengl] [ 13] layout(offset=112) vec2 texture_off0;
[   0.427][d][vo/gpu/opengl] [ 14] layout(offset=120) vec2 pixel_size0;
[   0.427][d][vo/gpu/opengl] [ 15] layout(offset=128) vec2 texture_size1;
[   0.427][d][vo/gpu/opengl] [ 16] layout(offset=144) mat2 texture_rot1;
[   0.429][d][vo/gpu/opengl] [ 17] layout(offset=176) vec2 texture_off1;
[   0.429][d][vo/gpu/opengl] [ 18] layout(offset=184) vec2 pixel_size1;
[   0.429][d][vo/gpu/opengl] [ 19] };
[   0.429][d][vo/gpu/opengl] [ 20] uniform sampler2D texture0;
[   0.429][d][vo/gpu/opengl] [ 21] uniform sampler2D texture1;
[   0.429][d][vo/gpu/opengl] [ 22] void main() {
[   0.429][d][vo/gpu/opengl] [ 23] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.429][d][vo/gpu/opengl] [ 24] color.r = 1.000000 * vec4(texture(texture0, texcoord0)).r;
[   0.429][d][vo/gpu/opengl] [ 25] color.gb = 1.000000 * vec4(texture(texture1, texcoord1)).rg;
[   0.429][d][vo/gpu/opengl] [ 26] color = color.rgbr;
[   0.429][d][vo/gpu/opengl] [ 27] color.rgb = mat3(colormatrix) * color.rgb + colormatrix_c;
[   0.429][d][vo/gpu/opengl] [ 28] color.a = 1.0;
[   0.429][d][vo/gpu/opengl] [ 29] // scaler pre-conversion
[   0.429][d][vo/gpu/opengl] [ 30] // main scaling
[   0.429][d][vo/gpu/opengl] [ 31] out_color = color;
[   0.429][d][vo/gpu/opengl] [ 32] }
[   0.433][d][vo/gpu/opengl] shader link log (status=1): 
[   0.433][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/BB6B81B9CDC2BEF623B47098E241869DE4FD53348E69E24F8B3A53708CDD43F5
[   0.433][d][vo/gpu] Resizing texture: 1280x720
[   0.433][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.433][d][vo/gpu] Trying to load shader from disk...
[   0.436][d][vo/gpu/opengl] vertex shader source:
[   0.436][d][vo/gpu/opengl] [  1] #version 440
[   0.436][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.436][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.436][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.436][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.436][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.436][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.436][d][vo/gpu/opengl] [  8] void main() {
[   0.436][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.436][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[   0.436][d][vo/gpu/opengl] [ 11] }
[   0.436][d][vo/gpu/opengl] fragment shader source:
[   0.436][d][vo/gpu/opengl] [  1] #version 440
[   0.436][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.436][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.436][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.436][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.436][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.436][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   0.436][d][vo/gpu/opengl] [  8] layout(offset=0) vec2 texture_size0;
[   0.436][d][vo/gpu/opengl] [  9] layout(offset=16) mat2 texture_rot0;
[   0.436][d][vo/gpu/opengl] [ 10] layout(offset=48) vec2 texture_off0;
[   0.436][d][vo/gpu/opengl] [ 11] layout(offset=56) vec2 pixel_size0;
[   0.436][d][vo/gpu/opengl] [ 12] };
[   0.436][d][vo/gpu/opengl] [ 13] uniform sampler2D texture0;
[   0.436][d][vo/gpu/opengl] [ 14] void main() {
[   0.436][d][vo/gpu/opengl] [ 15] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.436][d][vo/gpu/opengl] [ 16] #undef tex
[   0.436][d][vo/gpu/opengl] [ 17] #undef texmap
[   0.436][d][vo/gpu/opengl] [ 18] #define tex texture0
[   0.436][d][vo/gpu/opengl] [ 19] #define texmap texmap0
[   0.436][d][vo/gpu/opengl] [ 20] vec2 pos = texcoord0;
[   0.436][d][vo/gpu/opengl] [ 21] vec2 size = texture_size0;
[   0.436][d][vo/gpu/opengl] [ 22] vec2 pt = pixel_size0;
[   0.436][d][vo/gpu/opengl] [ 23] color = texture(tex, pos);
[   0.436][d][vo/gpu/opengl] [ 24] color *= 1.000000;
[   0.436][d][vo/gpu/opengl] [ 25] color.a = 1.000000;
[   0.436][d][vo/gpu/opengl] [ 26] // scaler post-conversion
[   0.436][d][vo/gpu/opengl] [ 27] out_color = color;
[   0.436][d][vo/gpu/opengl] [ 28] }
[   0.439][d][vo/gpu/opengl] shader link log (status=1): 
[   0.440][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/7930F84E337E5AA209159D64A3DE398F12E5DB74B99F82F50FC2BE3952C93C05
[   0.440][d][vo/gpu] Resizing texture: 1280x720
[   0.444][v][vo/gpu] Dither to 10.
[   0.524][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.524][d][vo/gpu] Trying to load shader from disk...
[   0.524][d][vo/gpu/opengl] vertex shader source:
[   0.524][d][vo/gpu/opengl] [  1] #version 440
[   0.524][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.524][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.524][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.524][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.524][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.524][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.524][d][vo/gpu/opengl] [  8] void main() {
[   0.524][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.524][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[   0.524][d][vo/gpu/opengl] [ 11] }
[   0.525][d][vo/gpu/opengl] fragment shader source:
[   0.525][d][vo/gpu/opengl] [  1] #version 440
[   0.525][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.525][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.525][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.525][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.525][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.525][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   0.525][d][vo/gpu/opengl] [  8] layout(offset=0) vec3 src_luma;
[   0.525][d][vo/gpu/opengl] [  9] layout(offset=16) vec3 dst_luma;
[   0.525][d][vo/gpu/opengl] [ 10] layout(offset=32) vec2 texture_size0;
[   0.525][d][vo/gpu/opengl] [ 11] layout(offset=48) mat2 texture_rot0;
[   0.525][d][vo/gpu/opengl] [ 12] layout(offset=80) vec2 texture_off0;
[   0.525][d][vo/gpu/opengl] [ 13] layout(offset=88) vec2 pixel_size0;
[   0.525][d][vo/gpu/opengl] [ 14] };
[   0.525][d][vo/gpu/opengl] [ 15] uniform sampler2D dither;
[   0.525][d][vo/gpu/opengl] [ 16] uniform sampler2D texture0;
[   0.525][d][vo/gpu/opengl] [ 17] void main() {
[   0.525][d][vo/gpu/opengl] [ 18] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.525][d][vo/gpu/opengl] [ 19] color.rgb = 1.000000 * vec4(texture(texture0, texcoord0)).rgb;
[   0.525][d][vo/gpu/opengl] [ 20] // color mapping
[   0.525][d][vo/gpu/opengl] [ 21] color.rgb *= vec3(1.000000);
[   0.525][d][vo/gpu/opengl] [ 22] color.rgb *= vec3(1.000000);
[   0.525][d][vo/gpu/opengl] [ 23] // dithering
[   0.525][d][vo/gpu/opengl] [ 24] vec2 dither_coord = vec2(gl_FragCoord.x, 0.0 + 1.000000 * gl_FragCoord.y);vec2 dither_pos = dither_coord * 1.0/64.0;
[   0.525][d][vo/gpu/opengl] [ 25] float dither_value = texture(dither, dither_pos).r;
[   0.525][d][vo/gpu/opengl] [ 26] color = floor(color * 1023.0 + dither_value + 0.5 / 4096.0) * 1.0/1023.0;
[   0.525][d][vo/gpu/opengl] [ 27] out_color = color;
[   0.525][d][vo/gpu/opengl] [ 28] }
[   0.527][d][vo/gpu/opengl] shader link log (status=1): 
[   0.527][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/E69F438DB81EB9DC3E34F8945BC6D8E96574E1727F4E2DAD2B8817BB3CAFE613
[   0.537][v][vo/gpu/wayland] Surface entered output Chimei Innolux Corporation 0x151B (0x30), scale = 2.000000, refresh rate = 60.001000 Hz
[   0.537][v][vo/gpu/wayland] Obtained preferred scale, 1.200000, from the compositor.
[   0.537][d][vo/gpu] max content size: 1920x1080
[   0.537][d][vo/gpu] monitor size: 1920x1080
[   0.537][v][vo/gpu/wayland] Resizing due to xdg from 1280x720 to 1888x1009
[   0.537][v][vo/gpu/wayland] Handling resize on the egl side
[   0.537][v][vo/gpu] Resize: 1888x1009
[   0.537][v][vo/gpu] Window size: 1888x1009 (Borders: l=0 t=0 r=0 b=0)
[   0.537][v][vo/gpu] Video source: 1280x720 (1:1)
[   0.537][v][vo/gpu] Video display: (0, 0) 1280x720 -> (47, 0) 1793x1009
[   0.537][v][vo/gpu] Video scale: 1.400781/1.401389
[   0.537][v][vo/gpu] OSD borders: l=47 t=0 r=48 b=0
[   0.537][v][vo/gpu] Video borders: l=47 t=0 r=48 b=0
[   0.537][v][vo/gpu] Reported display depth: 10
[   0.537][v][cplayer] first video frame after restart shown
[   0.539][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.539][d][vo/gpu] Trying to load shader from disk...
[   0.539][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[   0.539][d][vo/gpu/opengl] vertex shader source:
[   0.539][d][vo/gpu/opengl] [  1] #version 440
[   0.539][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.539][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.539][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.539][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.539][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.539][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.539][d][vo/gpu/opengl] [  8] in vec2 vertex_texcoord1;
[   0.539][d][vo/gpu/opengl] [  9] out vec2 texcoord1;
[   0.539][d][vo/gpu/opengl] [ 10] void main() {
[   0.539][d][vo/gpu/opengl] [ 11] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.539][d][vo/gpu/opengl] [ 12] texcoord0 = vertex_texcoord0;
[   0.539][d][vo/gpu/opengl] [ 13] texcoord1 = vertex_texcoord1;
[   0.539][d][vo/gpu/opengl] [ 14] }
[   0.540][d][vo/gpu/opengl] fragment shader source:
[   0.540][d][vo/gpu/opengl] [  1] #version 440
[   0.540][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.540][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.540][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.540][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.540][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.540][d][vo/gpu/opengl] [  7] in vec2 texcoord1;
[   0.540][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   0.540][d][vo/gpu/opengl] [  9] layout(offset=0) mat3 colormatrix;
[   0.540][d][vo/gpu/opengl] [ 10] layout(offset=48) vec3 colormatrix_c;
[   0.540][d][vo/gpu/opengl] [ 11] layout(offset=64) vec2 texture_size0;
[   0.540][d][vo/gpu/opengl] [ 12] layout(offset=80) mat2 texture_rot0;
[   0.540][d][vo/gpu/opengl] [ 13] layout(offset=112) vec2 texture_off0;
[   0.540][d][vo/gpu/opengl] [ 14] layout(offset=120) vec2 pixel_size0;
[   0.540][d][vo/gpu/opengl] [ 15] layout(offset=128) vec2 texture_size1;
[   0.540][d][vo/gpu/opengl] [ 16] layout(offset=144) mat2 texture_rot1;
[   0.540][d][vo/gpu/opengl] [ 17] layout(offset=176) vec2 texture_off1;
[   0.540][d][vo/gpu/opengl] [ 18] layout(offset=184) vec2 pixel_size1;
[   0.540][d][vo/gpu/opengl] [ 19] };
[   0.540][d][vo/gpu/opengl] [ 20] uniform sampler2D texture0;
[   0.540][d][vo/gpu/opengl] [ 21] uniform sampler2D texture1;
[   0.540][d][vo/gpu/opengl] [ 22] void main() {
[   0.540][d][vo/gpu/opengl] [ 23] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.540][d][vo/gpu/opengl] [ 24] color.r = 1.000000 * vec4(texture(texture0, texcoord0)).r;
[   0.540][d][vo/gpu/opengl] [ 25] color.gb = 1.000000 * vec4(texture(texture1, texcoord1)).rg;
[   0.540][d][vo/gpu/opengl] [ 26] color = color.rgbr;
[   0.540][d][vo/gpu/opengl] [ 27] color.rgb = mat3(colormatrix) * color.rgb + colormatrix_c;
[   0.540][d][vo/gpu/opengl] [ 28] color.a = 1.0;
[   0.540][d][vo/gpu/opengl] [ 29] // scaler pre-conversion
[   0.540][d][vo/gpu/opengl] [ 30] // linearize
[   0.540][d][vo/gpu/opengl] [ 31] color.rgb = clamp(color.rgb, 0.0, 1.0);
[   0.540][d][vo/gpu/opengl] [ 32] color.rgb = pow(color.rgb, vec3(2.4));
[   0.540][d][vo/gpu/opengl] [ 33] color.rgb *= vec3(1.0/1.000000);
[   0.540][d][vo/gpu/opengl] [ 34] color.rgb = clamp(color.rgb, 0.0, 1.0);
[   0.540][d][vo/gpu/opengl] [ 35] color.rgb = 0.750000 - log(1.0/(color.rgb * 0.827906 + 0.007577) - 1.0) * 1.0/6.500000;
[   0.540][d][vo/gpu/opengl] [ 36] // main scaling
[   0.540][d][vo/gpu/opengl] [ 37] out_color = color;
[   0.540][d][vo/gpu/opengl] [ 38] }
[   0.544][d][vo/gpu/opengl] shader link log (status=1): 
[   0.544][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/C5048F4B7863BBCB71ABA35103CB9664BD756028C69A4071385DB72CF53A24AC
[   0.559][d][vo/gpu] Resizing texture: 1280x1009
[   0.578][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.579][d][vo/gpu] Trying to load shader from disk...
[   0.579][d][vo/gpu/opengl] vertex shader source:
[   0.579][d][vo/gpu/opengl] [  1] #version 440
[   0.579][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.579][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.579][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.579][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.579][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.579][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.579][d][vo/gpu/opengl] [  8] void main() {
[   0.579][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.579][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[   0.579][d][vo/gpu/opengl] [ 11] }
[   0.580][d][vo/gpu/opengl] fragment shader source:
[   0.580][d][vo/gpu/opengl] [  1] #version 440
[   0.580][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.580][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.580][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.580][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.580][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.580][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   0.580][d][vo/gpu/opengl] [  8] layout(offset=0) vec2 texture_size0;
[   0.580][d][vo/gpu/opengl] [  9] layout(offset=16) mat2 texture_rot0;
[   0.580][d][vo/gpu/opengl] [ 10] layout(offset=48) vec2 texture_off0;
[   0.580][d][vo/gpu/opengl] [ 11] layout(offset=56) vec2 pixel_size0;
[   0.580][d][vo/gpu/opengl] [ 12] };
[   0.580][d][vo/gpu/opengl] [ 13] uniform sampler2D lut;
[   0.580][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   0.580][d][vo/gpu/opengl] [ 15] void main() {
[   0.580][d][vo/gpu/opengl] [ 16] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.580][d][vo/gpu/opengl] [ 17] #undef tex
[   0.580][d][vo/gpu/opengl] [ 18] #undef texmap
[   0.580][d][vo/gpu/opengl] [ 19] #define tex texture0
[   0.580][d][vo/gpu/opengl] [ 20] #define texmap texmap0
[   0.580][d][vo/gpu/opengl] [ 21] vec2 pos = texcoord0;
[   0.580][d][vo/gpu/opengl] [ 22] vec2 size = texture_size0;
[   0.580][d][vo/gpu/opengl] [ 23] vec2 pt = pixel_size0;
[   0.580][d][vo/gpu/opengl] [ 24] // first pass
[   0.580][d][vo/gpu/opengl] [ 25] color = vec4(0.0);
[   0.580][d][vo/gpu/opengl] [ 26] {
[   0.580][d][vo/gpu/opengl] [ 27] vec2 dir = vec2(0.0, 1.0);
[   0.580][d][vo/gpu/opengl] [ 28] pt *= dir;
[   0.580][d][vo/gpu/opengl] [ 29] float fcoord = dot(fract(pos * size - vec2(0.5)), dir);
[   0.580][d][vo/gpu/opengl] [ 30] vec2 base = pos - fcoord * pt - pt * vec2(2.0);
[   0.580][d][vo/gpu/opengl] [ 31] vec4 c;
[   0.580][d][vo/gpu/opengl] [ 32] float ypos = LUT_POS(fcoord, 256.0);
[   0.580][d][vo/gpu/opengl] [ 33] float weights[6];
[   0.580][d][vo/gpu/opengl] [ 34] c = texture(lut, vec2(0.250000, ypos));
[   0.580][d][vo/gpu/opengl] [ 35] weights[0] = c[0];
[   0.580][d][vo/gpu/opengl] [ 36] weights[1] = c[1];
[   0.580][d][vo/gpu/opengl] [ 37] weights[2] = c[2];
[   0.580][d][vo/gpu/opengl] [ 38] weights[3] = c[3];
[   0.580][d][vo/gpu/opengl] [ 39] c = texture(lut, vec2(0.750000, ypos));
[   0.580][d][vo/gpu/opengl] [ 40] weights[4] = c[0];
[   0.580][d][vo/gpu/opengl] [ 41] weights[5] = c[1];
[   0.580][d][vo/gpu/opengl] [ 42] // scaler samples
[   0.580][d][vo/gpu/opengl] [ 43] c = texture(tex, base + pt * vec2(0.0));
[   0.580][d][vo/gpu/opengl] [ 44] color += vec4(weights[0]) * c;
[   0.580][d][vo/gpu/opengl] [ 45] c = texture(tex, base + pt * vec2(1.0));
[   0.580][d][vo/gpu/opengl] [ 46] color += vec4(weights[1]) * c;
[   0.580][d][vo/gpu/opengl] [ 47] c = texture(tex, base + pt * vec2(2.0));
[   0.580][d][vo/gpu/opengl] [ 48] color += vec4(weights[2]) * c;
[   0.580][d][vo/gpu/opengl] [ 49] c = texture(tex, base + pt * vec2(3.0));
[   0.580][d][vo/gpu/opengl] [ 50] color += vec4(weights[3]) * c;
[   0.580][d][vo/gpu/opengl] [ 51] c = texture(tex, base + pt * vec2(4.0));
[   0.580][d][vo/gpu/opengl] [ 52] color += vec4(weights[4]) * c;
[   0.580][d][vo/gpu/opengl] [ 53] c = texture(tex, base + pt * vec2(5.0));
[   0.580][d][vo/gpu/opengl] [ 54] color += vec4(weights[5]) * c;
[   0.580][d][vo/gpu/opengl] [ 55] }
[   0.580][d][vo/gpu/opengl] [ 56] color *= 1.000000;
[   0.580][d][vo/gpu/opengl] [ 57] out_color = color;
[   0.580][d][vo/gpu/opengl] [ 58] }
[   0.582][d][vo/gpu/opengl] shader link log (status=1): 
[   0.582][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/36527269C78C491C9AEC901C5C4B68381D31C1DD56E52C59C3CA6462B90E95C2
[   0.583][d][vo/gpu] Resizing texture: 1793x1009
[   0.618][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[   0.618][d][vo/gpu] Trying to load shader from disk...
[   0.619][d][vo/gpu/opengl] vertex shader source:
[   0.619][d][vo/gpu/opengl] [  1] #version 440
[   0.619][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.619][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.619][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.619][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[   0.619][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[   0.619][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[   0.619][d][vo/gpu/opengl] [  8] void main() {
[   0.619][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   0.619][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[   0.619][d][vo/gpu/opengl] [ 11] }
[   0.620][d][vo/gpu/opengl] fragment shader source:
[   0.620][d][vo/gpu/opengl] [  1] #version 440
[   0.620][d][vo/gpu/opengl] [  2] #define tex1D texture
[   0.620][d][vo/gpu/opengl] [  3] #define tex3D texture
[   0.620][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   0.620][d][vo/gpu/opengl] [  5] out vec4 out_color;
[   0.620][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[   0.620][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   0.620][d][vo/gpu/opengl] [  8] layout(offset=0) vec2 texture_size0;
[   0.620][d][vo/gpu/opengl] [  9] layout(offset=16) mat2 texture_rot0;
[   0.620][d][vo/gpu/opengl] [ 10] layout(offset=48) vec2 texture_off0;
[   0.620][d][vo/gpu/opengl] [ 11] layout(offset=56) vec2 pixel_size0;
[   0.620][d][vo/gpu/opengl] [ 12] };
[   0.620][d][vo/gpu/opengl] [ 13] uniform sampler2D lut;
[   0.620][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   0.620][d][vo/gpu/opengl] [ 15] void main() {
[   0.620][d][vo/gpu/opengl] [ 16] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   0.620][d][vo/gpu/opengl] [ 17] #undef tex
[   0.620][d][vo/gpu/opengl] [ 18] #undef texmap
[   0.620][d][vo/gpu/opengl] [ 19] #define tex texture0
[   0.621][d][vo/gpu/opengl] [ 20] #define texmap texmap0
[   0.621][d][vo/gpu/opengl] [ 21] vec2 pos = texcoord0;
[   0.621][d][vo/gpu/opengl] [ 22] vec2 size = texture_size0;
[   0.621][d][vo/gpu/opengl] [ 23] vec2 pt = pixel_size0;
[   0.621][d][vo/gpu/opengl] [ 24] color = vec4(0.0);
[   0.621][d][vo/gpu/opengl] [ 25] {
[   0.621][d][vo/gpu/opengl] [ 26] vec2 dir = vec2(1.0, 0.0);
[   0.621][d][vo/gpu/opengl] [ 27] pt *= dir;
[   0.621][d][vo/gpu/opengl] [ 28] float fcoord = dot(fract(pos * size - vec2(0.5)), dir);
[   0.621][d][vo/gpu/opengl] [ 29] vec2 base = pos - fcoord * pt - pt * vec2(2.0);
[   0.621][d][vo/gpu/opengl] [ 30] vec4 c;
[   0.621][d][vo/gpu/opengl] [ 31] float ypos = LUT_POS(fcoord, 256.0);
[   0.621][d][vo/gpu/opengl] [ 32] float weights[6];
[   0.621][d][vo/gpu/opengl] [ 33] c = texture(lut, vec2(0.250000, ypos));
[   0.621][d][vo/gpu/opengl] [ 34] weights[0] = c[0];
[   0.621][d][vo/gpu/opengl] [ 35] weights[1] = c[1];
[   0.621][d][vo/gpu/opengl] [ 36] weights[2] = c[2];
[   0.621][d][vo/gpu/opengl] [ 37] weights[3] = c[3];
[   0.621][d][vo/gpu/opengl] [ 38] c = texture(lut, vec2(0.750000, ypos));
[   0.621][d][vo/gpu/opengl] [ 39] weights[4] = c[0];
[   0.621][d][vo/gpu/opengl] [ 40] weights[5] = c[1];
[   0.621][d][vo/gpu/opengl] [ 41] // scaler samples
[   0.621][d][vo/gpu/opengl] [ 42] c = texture(tex, base + pt * vec2(0.0));
[   0.621][d][vo/gpu/opengl] [ 43] color += vec4(weights[0]) * c;
[   0.621][d][vo/gpu/opengl] [ 44] c = texture(tex, base + pt * vec2(1.0));
[   0.621][d][vo/gpu/opengl] [ 45] color += vec4(weights[1]) * c;
[   0.621][d][vo/gpu/opengl] [ 46] c = texture(tex, base + pt * vec2(2.0));
[   0.621][d][vo/gpu/opengl] [ 47] color += vec4(weights[2]) * c;
[   0.621][d][vo/gpu/opengl] [ 48] c = texture(tex, base + pt * vec2(3.0));
[   0.621][d][vo/gpu/opengl] [ 49] color += vec4(weights[3]) * c;
[   0.621][d][vo/gpu/opengl] [ 50] c = texture(tex, base + pt * vec2(4.0));
[   0.621][d][vo/gpu/opengl] [ 51] color += vec4(weights[4]) * c;
[   0.621][d][vo/gpu/opengl] [ 52] c = texture(tex, base + pt * vec2(5.0));
[   0.621][d][vo/gpu/opengl] [ 53] color += vec4(weights[5]) * c;
[   0.621][d][vo/gpu/opengl] [ 54] }
[   0.621][d][vo/gpu/opengl] [ 55] color.a = 1.000000;
[   0.621][d][vo/gpu/opengl] [ 56] // scaler post-conversion
[   0.621][d][vo/gpu/opengl] [ 57] color.rgb = clamp(color.rgb, 0.0, 1.0);
[   0.621][d][vo/gpu/opengl] [ 58] color.rgb = (1.0/(1.0 + exp(6.500000 * (0.750000 - color.rgb))) - 0.007577) * 1.0/0.827906;
[   0.621][d][vo/gpu/opengl] [ 59] // delinearize
[   0.621][d][vo/gpu/opengl] [ 60] color.rgb = clamp(color.rgb, 0.0, 1.0);
[   0.621][d][vo/gpu/opengl] [ 61] color.rgb *= vec3(1.000000);
[   0.621][d][vo/gpu/opengl] [ 62] color.rgb = pow(color.rgb, vec3(1.0/2.4));
[   0.621][d][vo/gpu/opengl] [ 63] out_color = color;
[   0.621][d][vo/gpu/opengl] [ 64] }
[   0.625][d][vo/gpu/opengl] shader link log (status=1): 
[   0.625][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/B3286B0FDB222087BC1609A3F3A44814594501749C818DA58CDA86C2C93F9072
[   0.626][d][vo/gpu] Resizing texture: 1888x1009
[   0.686][d][osc] osc_init
[   0.688][v][cplayer] audio ready
[   0.688][d][cplayer] starting video playback
[   0.688][v][cplayer] delaying audio start 0.008000 vs. 0.000000, diff=0.008000
[   0.688][v][cplayer] playback restart complete @ 0.000000, audio=ready, video=playing (paused)
[   0.689][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[  25.064][v][vo/gpu/wayland] Given DND offer with mime type text/plain
[  25.064][v][vo/gpu/wayland] Given DND offer with mime type text/plain;charset=utf-8
[  25.064][v][vo/gpu/wayland] Received a new DND offer. Releasing the previous offer.
[  25.907][d][cplayer] Run command: cycle, flags=73, args=[name="pause", value="1.000000"]
[  25.907][v][cplayer] Set property: pause -> 1
[  25.907][v][vo/gpu/wayland] Enabling idle inhibitor
[  25.907][v][cplayer] starting audio playback
[  25.908][d][ao/pipewire] Stream state changed: old_state=paused state=streaming error=(null)
[  25.915][v][autoconvert] inserting resampler
[  25.915][v][swresample] format change, reinitializing resampler
[  25.915][v][swresample] 48001Hz stereo floatp -> 48000Hz stereo floatp
[  25.917][v][af] [convert] (enabled)
[  26.107][d][cplayer] Run command: cycle, flags=73, args=[name="pause", value="1.000000"]
[  26.107][v][cplayer] Dropping command 'cycle pause' from auto-repeated key.
[  26.149][d][cplayer] Run command: cycle, flags=73, args=[name="pause", value="1.000000"]
[  26.149][v][cplayer] Dropping command 'cycle pause' from auto-repeated key.
[  26.157][d][cplayer] Run command: cycle, flags=73, args=[name="pause", value="1.000000"]
[  26.157][v][cplayer] Dropping command 'cycle pause' from auto-repeated key.
[  28.331][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[  28.344][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[  28.347][v][osd/libass] fontselect: (sans-serif, 400, 0) -> /usr/share/fonts/noto/NotoSans-Regular.ttf, 0, NotoSans-Regular
[  28.349][v][osd/libass] fontselect: (mpv-osd-symbols, 400, 0) -> mpv-osd-symbols-Regular, 0, mpv-osd-symbols-Regular
[  28.351][v][osd/libass] Glyph 0xFF1A not found, selecting one more font for (sans-serif, 400, 0)
[  28.361][v][osd/libass] fontselect: (sans-serif, 400, 0) -> /usr/share/fonts/wps-fonts/malgun.ttf, 0, MalgunGothic
[  28.376][v][vo/gpu] Reallocating OSD texture to 2048x256.
[  28.378][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[  28.378][d][vo/gpu] Trying to load shader from disk...
[  28.379][d][vo/gpu/opengl] vertex shader source:
[  28.379][d][vo/gpu/opengl] [  1] #version 440
[  28.379][d][vo/gpu/opengl] [  2] #define tex1D texture
[  28.379][d][vo/gpu/opengl] [  3] #define tex3D texture
[  28.379][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[  28.379][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[  28.379][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord;
[  28.379][d][vo/gpu/opengl] [  7] out vec2 texcoord;
[  28.379][d][vo/gpu/opengl] [  8] in vec4 vertex_ass_color;
[  28.379][d][vo/gpu/opengl] [  9] out vec4 ass_color;
[  28.379][d][vo/gpu/opengl] [ 10] void main() {
[  28.379][d][vo/gpu/opengl] [ 11] gl_Position = vec4(vertex_position, 1.0, 1.0);
[  28.379][d][vo/gpu/opengl] [ 12] texcoord = vertex_texcoord;
[  28.379][d][vo/gpu/opengl] [ 13] ass_color = vertex_ass_color;
[  28.379][d][vo/gpu/opengl] [ 14] }
[  28.380][d][vo/gpu/opengl] fragment shader source:
[  28.380][d][vo/gpu/opengl] [  1] #version 440
[  28.380][d][vo/gpu/opengl] [  2] #define tex1D texture
[  28.380][d][vo/gpu/opengl] [  3] #define tex3D texture
[  28.380][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[  28.380][d][vo/gpu/opengl] [  5] out vec4 out_color;
[  28.380][d][vo/gpu/opengl] [  6] in vec2 texcoord;
[  28.380][d][vo/gpu/opengl] [  7] in vec4 ass_color;
[  28.380][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[  28.380][d][vo/gpu/opengl] [  9] layout(offset=0) vec3 src_luma;
[  28.380][d][vo/gpu/opengl] [ 10] layout(offset=16) vec3 dst_luma;
[  28.380][d][vo/gpu/opengl] [ 11] };
[  28.380][d][vo/gpu/opengl] [ 12] uniform sampler2D osdtex;
[  28.380][d][vo/gpu/opengl] [ 13] void main() {
[  28.380][d][vo/gpu/opengl] [ 14] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[  28.380][d][vo/gpu/opengl] [ 15] color = vec4(ass_color.rgb, ass_color.a * texture(osdtex, texcoord).r);
[  28.380][d][vo/gpu/opengl] [ 16] // color mapping
[  28.380][d][vo/gpu/opengl] [ 17] color.rgb *= vec3(1.000000);
[  28.380][d][vo/gpu/opengl] [ 18] color.rgb *= vec3(1.000000);
[  28.380][d][vo/gpu/opengl] [ 19] out_color = color;
[  28.380][d][vo/gpu/opengl] [ 20] }
[  28.381][d][vo/gpu/opengl] shader link log (status=1): 
[  28.381][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/E3DD539796D5008BDB0B2B35E078344E145292668E3C65F45D96631C71D9326D
[  28.480][d][global] user path: '/home/brown/.cache/mpv' -> '/home/brown/.cache/mpv'
[  28.480][d][vo/gpu] Trying to load shader from disk...
[  28.481][d][vo/gpu/opengl] vertex shader source:
[  28.481][d][vo/gpu/opengl] [  1] #version 440
[  28.481][d][vo/gpu/opengl] [  2] #define tex1D texture
[  28.481][d][vo/gpu/opengl] [  3] #define tex3D texture
[  28.481][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[  28.481][d][vo/gpu/opengl] [  5] in vec2 vertex_position;
[  28.481][d][vo/gpu/opengl] [  6] in vec2 vertex_texcoord0;
[  28.481][d][vo/gpu/opengl] [  7] out vec2 texcoord0;
[  28.481][d][vo/gpu/opengl] [  8] void main() {
[  28.481][d][vo/gpu/opengl] [  9] gl_Position = vec4(vertex_position, 1.0, 1.0);
[  28.481][d][vo/gpu/opengl] [ 10] texcoord0 = vertex_texcoord0;
[  28.481][d][vo/gpu/opengl] [ 11] }
[  28.482][d][vo/gpu/opengl] fragment shader source:
[  28.482][d][vo/gpu/opengl] [  1] #version 440
[  28.482][d][vo/gpu/opengl] [  2] #define tex1D texture
[  28.482][d][vo/gpu/opengl] [  3] #define tex3D texture
[  28.482][d][vo/gpu/opengl] [  4] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[  28.482][d][vo/gpu/opengl] [  5] out vec4 out_color;
[  28.482][d][vo/gpu/opengl] [  6] in vec2 texcoord0;
[  28.482][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[  28.482][d][vo/gpu/opengl] [  8] layout(offset=0) vec3 src_luma;
[  28.482][d][vo/gpu/opengl] [  9] layout(offset=16) vec3 dst_luma;
[  28.482][d][vo/gpu/opengl] [ 10] layout(offset=32) vec2 texture_size0;
[  28.482][d][vo/gpu/opengl] [ 11] layout(offset=48) mat2 texture_rot0;
[  28.482][d][vo/gpu/opengl] [ 12] layout(offset=80) vec2 texture_off0;
[  28.482][d][vo/gpu/opengl] [ 13] layout(offset=88) vec2 pixel_size0;
[  28.482][d][vo/gpu/opengl] [ 14] };
[  28.482][d][vo/gpu/opengl] [ 15] uniform sampler2D dither;
[  28.482][d][vo/gpu/opengl] [ 16] uniform sampler2D texture0;
[  28.482][d][vo/gpu/opengl] [ 17] void main() {
[  28.482][d][vo/gpu/opengl] [ 18] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[  28.482][d][vo/gpu/opengl] [ 19] color.rgb = 1.000000 * vec4(texture(texture0, texcoord0)).rgb;
[  28.482][d][vo/gpu/opengl] [ 20] // color mapping
[  28.482][d][vo/gpu/opengl] [ 21] color.rgb *= vec3(1.000000);
[  28.482][d][vo/gpu/opengl] [ 22] color.rgb *= vec3(1.000000);
[  28.482][d][vo/gpu/opengl] [ 23] // dithering
[  28.482][d][vo/gpu/opengl] [ 24] vec2 dither_coord = vec2(gl_FragCoord.x, 1009.0 + -1.000000 * gl_FragCoord.y);vec2 dither_pos = dither_coord * 1.0/64.0;
[  28.482][d][vo/gpu/opengl] [ 25] float dither_value = texture(dither, dither_pos).r;
[  28.482][d][vo/gpu/opengl] [ 26] color = floor(color * 1023.0 + dither_value + 0.5 / 4096.0) * 1.0/1023.0;
[  28.482][d][vo/gpu/opengl] [ 27] out_color = color;
[  28.482][d][vo/gpu/opengl] [ 28] }
[  28.483][d][vo/gpu/opengl] shader link log (status=1): 
[  28.484][d][vo/gpu] Writing shader cache file: /home/brown/.cache/mpv/4BFB6F6E77316F66F988C4FA3912E5C7C9DB4853A371EE948DBA17E11534FA81
[  28.722][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding2"]
[  28.894][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding4"]
[  28.963][v][cplayer] Set property: user-data/osc/margins={"l":0,"t":0,"b":0,"r":0} -> 1
[  28.963][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[  37.820][v][vo/gpu/wayland] Received a new DND offer. Releasing the previous offer.
[  42.702][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding4"]
[  44.890][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding4"]
